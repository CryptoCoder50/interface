{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/warrenmason/Downloads/Final Versions/Avalanche/BSC-Moonwalker-Swap-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/warrenmason/Downloads/Final Versions/Avalanche/BSC-Moonwalker-Swap-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/Users/warrenmason/Downloads/Final Versions/Avalanche/BSC-Moonwalker-Swap-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/Users/warrenmason/Downloads/Final Versions/Avalanche/BSC-Moonwalker-Swap-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringTranslationsModel = exports.StringTranslations = void 0;\n\nvar core_1 = require(\"../core\");\n\nvar StringTranslations = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(StringTranslations, _core_1$CrowdinApi);\n\n  var _super = _createSuper(StringTranslations);\n\n  function StringTranslations() {\n    _classCallCheck(this, StringTranslations);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StringTranslations, [{\n    key: \"listTranslationApprovals\",\n    value: function listTranslationApprovals(projectId, stringIdOrRequest, languageId, translationId, limit, offset, fileId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/approvals\");\n      var request;\n\n      if (stringIdOrRequest && typeof stringIdOrRequest === 'object') {\n        request = stringIdOrRequest;\n      } else {\n        request = {\n          stringId: stringIdOrRequest,\n          languageId: languageId,\n          translationId: translationId,\n          limit: limit,\n          offset: offset,\n          fileId: fileId\n        };\n      }\n\n      url = this.addQueryParam(url, 'stringId', request.stringId);\n      url = this.addQueryParam(url, 'languageId', request.languageId);\n      url = this.addQueryParam(url, 'translationId', request.translationId);\n      url = this.addQueryParam(url, 'fileId', request.fileId);\n      return this.getList(url, request.limit, request.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"addApproval\",\n    value: function addApproval(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/approvals\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param approvalId approval identifier\n     */\n\n  }, {\n    key: \"approvalInfo\",\n    value: function approvalInfo(projectId, approvalId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/approvals/\").concat(approvalId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param approvalId approval identifier\n     */\n\n  }, {\n    key: \"removeApproval\",\n    value: function removeApproval(projectId, approvalId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/approvals/\").concat(approvalId);\n      return this.delete(url, this.defaultConfig());\n    }\n  }, {\n    key: \"listLanguageTranslations\",\n    value: function listLanguageTranslations(projectId, languageId, stringIdsOrRequest, fileId, limit, offset, labelIds, denormalizePlaceholders, croql) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/languages/\").concat(languageId, \"/translations\");\n      var request;\n\n      if (stringIdsOrRequest && typeof stringIdsOrRequest === 'object') {\n        request = stringIdsOrRequest;\n      } else {\n        request = {\n          stringIds: stringIdsOrRequest,\n          fileId: fileId,\n          limit: limit,\n          offset: offset,\n          labelIds: labelIds,\n          denormalizePlaceholders: denormalizePlaceholders,\n          croql: croql\n        };\n      }\n\n      url = this.addQueryParam(url, 'stringIds', request.stringIds);\n      url = this.addQueryParam(url, 'fileId', request.fileId);\n      url = this.addQueryParam(url, 'labelIds', request.labelIds);\n      url = this.addQueryParam(url, 'denormalizePlaceholders', request.denormalizePlaceholders);\n      url = this.addQueryParam(url, 'croql', request.croql);\n      return this.getList(url, request.limit, request.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param denormalizePlaceholders enable denormalize placeholders\n     */\n\n  }, {\n    key: \"listStringTranslations\",\n    value: function listStringTranslations(projectId, stringId, languageId, limit, offset, denormalizePlaceholders) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations\");\n      url = this.addQueryParam(url, 'stringId', stringId);\n      url = this.addQueryParam(url, 'languageId', languageId);\n      url = this.addQueryParam(url, 'denormalizePlaceholders', denormalizePlaceholders);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"addTranslation\",\n    value: function addTranslation(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     */\n\n  }, {\n    key: \"deleteAllTranslations\",\n    value: function deleteAllTranslations(projectId, stringId, languageId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations\");\n      url = this.addQueryParam(url, 'stringId', stringId);\n      url = this.addQueryParam(url, 'languageId', languageId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translationId translation identifier\n     */\n\n  }, {\n    key: \"translationInfo\",\n    value: function translationInfo(projectId, translationId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/\").concat(translationId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translation translation identifier\n     */\n\n  }, {\n    key: \"deleteTranslation\",\n    value: function deleteTranslation(projectId, translationId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/\").concat(translationId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translation translation identifier\n     */\n\n  }, {\n    key: \"restoreTranslation\",\n    value: function restoreTranslation(projectId, translationId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/\").concat(translationId, \"/restore\");\n      return this.put(url, {}, this.defaultConfig());\n    }\n  }, {\n    key: \"listTranslationVotes\",\n    value: function listTranslationVotes(projectId, stringIdOrRequest, languageId, translationId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/votes\");\n      var request;\n\n      if (stringIdOrRequest && typeof stringIdOrRequest === 'object') {\n        request = stringIdOrRequest;\n      } else {\n        request = {\n          stringId: stringIdOrRequest,\n          languageId: languageId,\n          translationId: translationId,\n          limit: limit,\n          offset: offset\n        };\n      }\n\n      url = this.addQueryParam(url, 'stringId', request.stringId);\n      url = this.addQueryParam(url, 'languageId', request.languageId);\n      url = this.addQueryParam(url, 'translationId', request.translationId);\n      return this.getList(url, request.limit, request.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"addVote\",\n    value: function addVote(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/votes\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param voteId vote identifier\n     */\n\n  }, {\n    key: \"voteInfo\",\n    value: function voteInfo(projectId, voteId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/votes/\").concat(voteId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param voteId vote identifier\n     */\n\n  }, {\n    key: \"cancelVote\",\n    value: function cancelVote(projectId, voteId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/votes/\").concat(voteId);\n      return this.delete(url, this.defaultConfig());\n    }\n  }]);\n\n  return StringTranslations;\n}(core_1.CrowdinApi);\n\nexports.StringTranslations = StringTranslations;\nvar StringTranslationsModel;\n\n(function (StringTranslationsModel) {\n  var Mark;\n\n  (function (Mark) {\n    Mark[\"UP\"] = \"up\";\n    Mark[\"DOWN\"] = \"down\";\n  })(Mark = StringTranslationsModel.Mark || (StringTranslationsModel.Mark = {}));\n})(StringTranslationsModel = exports.StringTranslationsModel || (exports.StringTranslationsModel = {}));","map":{"version":3,"sources":["/Users/warrenmason/Downloads/Final Versions/Avalanche/BSC-Moonwalker-Swap-main/node_modules/@crowdin/crowdin-api-client/out/stringTranslations/index.js"],"names":["Object","defineProperty","exports","value","StringTranslationsModel","StringTranslations","core_1","require","projectId","stringIdOrRequest","languageId","translationId","limit","offset","fileId","url","request","stringId","addQueryParam","getList","post","defaultConfig","approvalId","get","delete","stringIdsOrRequest","labelIds","denormalizePlaceholders","croql","stringIds","put","voteId","CrowdinApi","Mark"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringTranslationsModel = exports.StringTranslations = void 0;\nconst core_1 = require(\"../core\");\nclass StringTranslations extends core_1.CrowdinApi {\n    listTranslationApprovals(projectId, stringIdOrRequest, languageId, translationId, limit, offset, fileId) {\n        let url = `${this.url}/projects/${projectId}/approvals`;\n        let request;\n        if (stringIdOrRequest && typeof stringIdOrRequest === 'object') {\n            request = stringIdOrRequest;\n        }\n        else {\n            request = { stringId: stringIdOrRequest, languageId, translationId, limit, offset, fileId };\n        }\n        url = this.addQueryParam(url, 'stringId', request.stringId);\n        url = this.addQueryParam(url, 'languageId', request.languageId);\n        url = this.addQueryParam(url, 'translationId', request.translationId);\n        url = this.addQueryParam(url, 'fileId', request.fileId);\n        return this.getList(url, request.limit, request.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addApproval(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/approvals`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param approvalId approval identifier\n     */\n    approvalInfo(projectId, approvalId) {\n        const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param approvalId approval identifier\n     */\n    removeApproval(projectId, approvalId) {\n        const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    listLanguageTranslations(projectId, languageId, stringIdsOrRequest, fileId, limit, offset, labelIds, denormalizePlaceholders, croql) {\n        let url = `${this.url}/projects/${projectId}/languages/${languageId}/translations`;\n        let request;\n        if (stringIdsOrRequest && typeof stringIdsOrRequest === 'object') {\n            request = stringIdsOrRequest;\n        }\n        else {\n            request = {\n                stringIds: stringIdsOrRequest,\n                fileId,\n                limit,\n                offset,\n                labelIds,\n                denormalizePlaceholders,\n                croql,\n            };\n        }\n        url = this.addQueryParam(url, 'stringIds', request.stringIds);\n        url = this.addQueryParam(url, 'fileId', request.fileId);\n        url = this.addQueryParam(url, 'labelIds', request.labelIds);\n        url = this.addQueryParam(url, 'denormalizePlaceholders', request.denormalizePlaceholders);\n        url = this.addQueryParam(url, 'croql', request.croql);\n        return this.getList(url, request.limit, request.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param denormalizePlaceholders enable denormalize placeholders\n     */\n    listStringTranslations(projectId, stringId, languageId, limit, offset, denormalizePlaceholders) {\n        let url = `${this.url}/projects/${projectId}/translations`;\n        url = this.addQueryParam(url, 'stringId', stringId);\n        url = this.addQueryParam(url, 'languageId', languageId);\n        url = this.addQueryParam(url, 'denormalizePlaceholders', denormalizePlaceholders);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addTranslation(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/translations`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     */\n    deleteAllTranslations(projectId, stringId, languageId) {\n        let url = `${this.url}/projects/${projectId}/translations`;\n        url = this.addQueryParam(url, 'stringId', stringId);\n        url = this.addQueryParam(url, 'languageId', languageId);\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translationId translation identifier\n     */\n    translationInfo(projectId, translationId) {\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translation translation identifier\n     */\n    deleteTranslation(projectId, translationId) {\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translation translation identifier\n     */\n    restoreTranslation(projectId, translationId) {\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}/restore`;\n        return this.put(url, {}, this.defaultConfig());\n    }\n    listTranslationVotes(projectId, stringIdOrRequest, languageId, translationId, limit, offset) {\n        let url = `${this.url}/projects/${projectId}/votes`;\n        let request;\n        if (stringIdOrRequest && typeof stringIdOrRequest === 'object') {\n            request = stringIdOrRequest;\n        }\n        else {\n            request = { stringId: stringIdOrRequest, languageId, translationId, limit, offset };\n        }\n        url = this.addQueryParam(url, 'stringId', request.stringId);\n        url = this.addQueryParam(url, 'languageId', request.languageId);\n        url = this.addQueryParam(url, 'translationId', request.translationId);\n        return this.getList(url, request.limit, request.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addVote(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/votes`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param voteId vote identifier\n     */\n    voteInfo(projectId, voteId) {\n        const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param voteId vote identifier\n     */\n    cancelVote(projectId, voteId) {\n        const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n}\nexports.StringTranslations = StringTranslations;\nvar StringTranslationsModel;\n(function (StringTranslationsModel) {\n    let Mark;\n    (function (Mark) {\n        Mark[\"UP\"] = \"up\";\n        Mark[\"DOWN\"] = \"down\";\n    })(Mark = StringTranslationsModel.Mark || (StringTranslationsModel.Mark = {}));\n})(StringTranslationsModel = exports.StringTranslationsModel || (exports.StringTranslationsModel = {}));\n"]},"metadata":{},"sourceType":"script"}