{"ast":null,"code":"import _objectSpread from\"/Users/warrenmason/Downloads/Final Versions/Avalanche/BSC-Moonwalker-Swap-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useContext}from'react';import{Menu as UikitMenu}from'moonwalkerswap-uikit-avalanche';import{useWeb3React}from'@web3-react/core';import{allLanguages}from'../../constants/localisation/languageCodes';import{LanguageContext}from'../../hooks/LanguageContext';import useTheme from'../../hooks/useTheme';import useAvaxPrice from'../../hooks/useAvaxPrice';import useGetLocalProfile from'../../hooks/useGetLocalProfile';import useAuth from'../../hooks/useAuth';import links from'./config';import{jsx as _jsx}from\"react/jsx-runtime\";var Menu=function Menu(props){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useAuth=useAuth(),login=_useAuth.login,logout=_useAuth.logout;var _useContext=useContext(LanguageContext),selectedLanguage=_useContext.selectedLanguage,setSelectedLanguage=_useContext.setSelectedLanguage;var _useTheme=useTheme(),isDark=_useTheme.isDark,toggleTheme=_useTheme.toggleTheme;var avaxPriceUsd=useAvaxPrice();var profile=useGetLocalProfile();return/*#__PURE__*/_jsx(UikitMenu,_objectSpread({links:links,account:account,login:login,logout:logout,isDark:isDark,toggleTheme:toggleTheme,currentLang:(selectedLanguage===null||selectedLanguage===void 0?void 0:selectedLanguage.code)||'',langs:allLanguages,setLang:setSelectedLanguage,solarPriceUsd:avaxPriceUsd,profile:profile},props));};export default Menu;","map":{"version":3,"sources":["/Users/warrenmason/Downloads/Final Versions/Avalanche/BSC-Moonwalker-Swap-main/src/components/Menu/index.tsx"],"names":["React","useContext","Menu","UikitMenu","useWeb3React","allLanguages","LanguageContext","useTheme","useAvaxPrice","useGetLocalProfile","useAuth","links","props","account","login","logout","selectedLanguage","setSelectedLanguage","isDark","toggleTheme","avaxPriceUsd","profile","code"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAI,GAAIC,CAAAA,SAAjB,KAAiC,gCAAjC,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,YAAT,KAA6B,4CAA7B,CACA,OAASC,eAAT,KAAgC,6BAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,gCAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,C,2CAGA,GAAMT,CAAAA,IAAc,CAAG,QAAjBA,CAAAA,IAAiB,CAACU,KAAD,CAAW,CAChC,kBAAoBR,YAAY,EAAhC,CAAQS,OAAR,eAAQA,OAAR,CACA,aAA0BH,OAAO,EAAjC,CAAQI,KAAR,UAAQA,KAAR,CAAeC,MAAf,UAAeA,MAAf,CACA,gBAAkDd,UAAU,CAACK,eAAD,CAA5D,CAAQU,gBAAR,aAAQA,gBAAR,CAA0BC,mBAA1B,aAA0BA,mBAA1B,CACA,cAAgCV,QAAQ,EAAxC,CAAQW,MAAR,WAAQA,MAAR,CAAgBC,WAAhB,WAAgBA,WAAhB,CACA,GAAMC,CAAAA,YAAY,CAAGZ,YAAY,EAAjC,CACA,GAAMa,CAAAA,OAAO,CAAGZ,kBAAkB,EAAlC,CAEA,mBACE,KAAC,SAAD,gBACE,KAAK,CAAEE,KADT,CAEE,OAAO,CAAEE,OAFX,CAGE,KAAK,CAAEC,KAHT,CAIE,MAAM,CAAEC,MAJV,CAKE,MAAM,CAAEG,MALV,CAME,WAAW,CAAEC,WANf,CAOE,WAAW,CAAE,CAAAH,gBAAgB,OAAhB,EAAAA,gBAAgB,SAAhB,QAAAA,gBAAgB,CAAEM,IAAlB,GAA0B,EAPzC,CAQE,KAAK,CAAEjB,YART,CASE,OAAO,CAAEY,mBATX,CAUE,aAAa,CAAEG,YAVjB,CAWE,OAAO,CAAEC,OAXX,EAYMT,KAZN,EADF,CAgBD,CAxBD,CA0BA,cAAeV,CAAAA,IAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { Menu as UikitMenu} from 'moonwalkerswap-uikit-avalanche'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from '../../constants/localisation/languageCodes'\nimport { LanguageContext } from '../../hooks/LanguageContext'\nimport useTheme from '../../hooks/useTheme'\nimport useAvaxPrice from '../../hooks/useAvaxPrice'\nimport useGetLocalProfile from '../../hooks/useGetLocalProfile'\nimport useAuth from '../../hooks/useAuth'\nimport links from './config'\n\n\nconst Menu: React.FC = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const avaxPriceUsd = useAvaxPrice()\n  const profile = useGetLocalProfile()\n\n  return (\n    <UikitMenu\n      links={links}\n      account={account as string}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage?.code || ''}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      solarPriceUsd={avaxPriceUsd}\n      profile={profile}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}