{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/warrenmason/Downloads/Final Versions/Avalanche/BSC-Moonwalker-Swap-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/warrenmason/Downloads/Final Versions/Avalanche/BSC-Moonwalker-Swap-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/Users/warrenmason/Downloads/Final Versions/Avalanche/BSC-Moonwalker-Swap-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/Users/warrenmason/Downloads/Final Versions/Avalanche/BSC-Moonwalker-Swap-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MachineTranslationModel = exports.MachineTranslation = void 0;\n\nvar core_1 = require(\"../core\");\n\nvar MachineTranslation = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(MachineTranslation, _core_1$CrowdinApi);\n\n  var _super = _createSuper(MachineTranslation);\n\n  function MachineTranslation() {\n    _classCallCheck(this, MachineTranslation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MachineTranslation, [{\n    key: \"listMts\",\n    value:\n    /**\n     * @param groupId group identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    function listMts(groupId, limit, offset) {\n      var url = \"\".concat(this.url, \"/mts\");\n      url = this.addQueryParam(url, 'groupId', groupId);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n\n  }, {\n    key: \"createMt\",\n    value: function createMt(request) {\n      var url = \"\".concat(this.url, \"/mts\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     */\n\n  }, {\n    key: \"getMt\",\n    value: function getMt(mtId) {\n      var url = \"\".concat(this.url, \"/mts/\").concat(mtId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     */\n\n  }, {\n    key: \"deleteMt\",\n    value: function deleteMt(mtId) {\n      var url = \"\".concat(this.url, \"/mts/\").concat(mtId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"updateMt\",\n    value: function updateMt(mtId, request) {\n      var url = \"\".concat(this.url, \"/mts/\").concat(mtId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     *\n     * @param mtId mt identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"translate\",\n    value: function translate(mtId, request) {\n      var url = \"\".concat(this.url, \"/mts/\").concat(mtId, \"/translations\");\n      return this.post(url, request, this.defaultConfig());\n    }\n  }]);\n\n  return MachineTranslation;\n}(core_1.CrowdinApi);\n\nexports.MachineTranslation = MachineTranslation;\nvar MachineTranslationModel;\n\n(function (MachineTranslationModel) {\n  var LanguageRecognitionProvider;\n\n  (function (LanguageRecognitionProvider) {\n    LanguageRecognitionProvider[\"CROWDIN\"] = \"crowdin\";\n    LanguageRecognitionProvider[\"ENGINE\"] = \"engine\";\n  })(LanguageRecognitionProvider = MachineTranslationModel.LanguageRecognitionProvider || (MachineTranslationModel.LanguageRecognitionProvider = {}));\n})(MachineTranslationModel = exports.MachineTranslationModel || (exports.MachineTranslationModel = {}));","map":{"version":3,"sources":["/Users/warrenmason/Downloads/Final Versions/Avalanche/BSC-Moonwalker-Swap-main/node_modules/@crowdin/crowdin-api-client/out/machineTranslation/index.js"],"names":["Object","defineProperty","exports","value","MachineTranslationModel","MachineTranslation","core_1","require","groupId","limit","offset","url","addQueryParam","getList","request","post","defaultConfig","mtId","get","delete","patch","CrowdinApi","LanguageRecognitionProvider"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,uBAAR,GAAkCF,OAAO,CAACG,kBAAR,GAA6B,KAAK,CAApE;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;IACMF,kB;;;;;;;;;;;;;;AACF;AACJ;AACA;AACA;AACA;AACI,qBAAQG,OAAR,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAIC,GAAG,aAAM,KAAKA,GAAX,SAAP;AACAA,MAAAA,GAAG,GAAG,KAAKC,aAAL,CAAmBD,GAAnB,EAAwB,SAAxB,EAAmCH,OAAnC,CAAN;AACA,aAAO,KAAKK,OAAL,CAAaF,GAAb,EAAkBF,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;;;;WACI,kBAASI,OAAT,EAAkB;AACd,UAAMH,GAAG,aAAM,KAAKA,GAAX,SAAT;AACA,aAAO,KAAKI,IAAL,CAAUJ,GAAV,EAAeG,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;;;;WACI,eAAMC,IAAN,EAAY;AACR,UAAMN,GAAG,aAAM,KAAKA,GAAX,kBAAsBM,IAAtB,CAAT;AACA,aAAO,KAAKC,GAAL,CAASP,GAAT,EAAc,KAAKK,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;;;;WACI,kBAASC,IAAT,EAAe;AACX,UAAMN,GAAG,aAAM,KAAKA,GAAX,kBAAsBM,IAAtB,CAAT;AACA,aAAO,KAAKE,MAAL,CAAYR,GAAZ,EAAiB,KAAKK,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,kBAASC,IAAT,EAAeH,OAAf,EAAwB;AACpB,UAAMH,GAAG,aAAM,KAAKA,GAAX,kBAAsBM,IAAtB,CAAT;AACA,aAAO,KAAKG,KAAL,CAAWT,GAAX,EAAgBG,OAAhB,EAAyB,KAAKE,aAAL,EAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,mBAAUC,IAAV,EAAgBH,OAAhB,EAAyB;AACrB,UAAMH,GAAG,aAAM,KAAKA,GAAX,kBAAsBM,IAAtB,kBAAT;AACA,aAAO,KAAKF,IAAL,CAAUJ,GAAV,EAAeG,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;;;;EAhD4BV,MAAM,CAACe,U;;AAkDxCnB,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;AACA,IAAID,uBAAJ;;AACA,CAAC,UAAUA,uBAAV,EAAmC;AAChC,MAAIkB,2BAAJ;;AACA,GAAC,UAAUA,2BAAV,EAAuC;AACpCA,IAAAA,2BAA2B,CAAC,SAAD,CAA3B,GAAyC,SAAzC;AACAA,IAAAA,2BAA2B,CAAC,QAAD,CAA3B,GAAwC,QAAxC;AACH,GAHD,EAGGA,2BAA2B,GAAGlB,uBAAuB,CAACkB,2BAAxB,KAAwDlB,uBAAuB,CAACkB,2BAAxB,GAAsD,EAA9G,CAHjC;AAIH,CAND,EAMGlB,uBAAuB,GAAGF,OAAO,CAACE,uBAAR,KAAoCF,OAAO,CAACE,uBAAR,GAAkC,EAAtE,CAN7B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MachineTranslationModel = exports.MachineTranslation = void 0;\nconst core_1 = require(\"../core\");\nclass MachineTranslation extends core_1.CrowdinApi {\n    /**\n     * @param groupId group identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listMts(groupId, limit, offset) {\n        let url = `${this.url}/mts`;\n        url = this.addQueryParam(url, 'groupId', groupId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n    createMt(request) {\n        const url = `${this.url}/mts`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     */\n    getMt(mtId) {\n        const url = `${this.url}/mts/${mtId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     */\n    deleteMt(mtId) {\n        const url = `${this.url}/mts/${mtId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     * @param request request body\n     */\n    updateMt(mtId, request) {\n        const url = `${this.url}/mts/${mtId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     *\n     * @param mtId mt identifier\n     * @param request request body\n     */\n    translate(mtId, request) {\n        const url = `${this.url}/mts/${mtId}/translations`;\n        return this.post(url, request, this.defaultConfig());\n    }\n}\nexports.MachineTranslation = MachineTranslation;\nvar MachineTranslationModel;\n(function (MachineTranslationModel) {\n    let LanguageRecognitionProvider;\n    (function (LanguageRecognitionProvider) {\n        LanguageRecognitionProvider[\"CROWDIN\"] = \"crowdin\";\n        LanguageRecognitionProvider[\"ENGINE\"] = \"engine\";\n    })(LanguageRecognitionProvider = MachineTranslationModel.LanguageRecognitionProvider || (MachineTranslationModel.LanguageRecognitionProvider = {}));\n})(MachineTranslationModel = exports.MachineTranslationModel || (exports.MachineTranslationModel = {}));\n"]},"metadata":{},"sourceType":"script"}