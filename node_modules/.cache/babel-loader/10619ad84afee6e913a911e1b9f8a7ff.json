{"ast":null,"code":"\"use strict\";\n\nfunction t(t) {\n  return t && \"object\" == typeof t && \"default\" in t ? t.default : t;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar e,\n    n,\n    r,\n    o,\n    i = t(require(\"jsbi\")),\n    a = t(require(\"tiny-invariant\")),\n    u = (t(require(\"tiny-warning\")), require(\"@ethersproject/address\")),\n    s = t(require(\"big.js\")),\n    c = t(require(\"toformat\")),\n    f = t(require(\"decimal.js-light\")),\n    l = require(\"@ethersproject/solidity\"),\n    h = require(\"@ethersproject/contracts\"),\n    p = require(\"@ethersproject/networks\"),\n    d = require(\"@ethersproject/providers\"),\n    v = t(require(\"moonwalkerswap-v2-core/build/contracts/IMoonwalkerPair.json\"));\n\n(n = exports.ChainId || (exports.ChainId = {}))[n.AVALANCHE = 43114] = \"AVALANCHE\", (r = exports.TradeType || (exports.TradeType = {}))[r.EXACT_INPUT = 0] = \"EXACT_INPUT\", r[r.EXACT_OUTPUT = 1] = \"EXACT_OUTPUT\", (o = exports.Rounding || (exports.Rounding = {}))[o.ROUND_DOWN = 0] = \"ROUND_DOWN\", o[o.ROUND_HALF_UP = 1] = \"ROUND_HALF_UP\", o[o.ROUND_UP = 2] = \"ROUND_UP\";\nvar m,\n    y = \"0xdc881fbbbdf45595337cc751b266384ded4942f7326bf7ebbc8bde142f820018\",\n    w = i.BigInt(1e3),\n    g = i.BigInt(0),\n    T = i.BigInt(1),\n    k = i.BigInt(2),\n    x = i.BigInt(3),\n    b = i.BigInt(5),\n    A = i.BigInt(10),\n    O = i.BigInt(100),\n    I = i.BigInt(997),\n    E = i.BigInt(1e3);\n!function (t) {\n  t.uint8 = \"uint8\", t.uint256 = \"uint256\";\n}(m || (m = {}));\nvar q = ((e = {})[m.uint8] = i.BigInt(\"0xff\"), e[m.uint256] = i.BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"), e);\n\nfunction _(t, e, n, r, o, i, a) {\n  try {\n    var u = t[i](a),\n        s = u.value;\n  } catch (t) {\n    return void n(t);\n  }\n\n  u.done ? e(s) : Promise.resolve(s).then(r, o);\n}\n\nfunction P(t) {\n  return function () {\n    var e = this,\n        n = arguments;\n    return new Promise(function (r, o) {\n      var i = t.apply(e, n);\n\n      function a(t) {\n        _(i, r, o, a, u, \"next\", t);\n      }\n\n      function u(t) {\n        _(i, r, o, a, u, \"throw\", t);\n      }\n\n      a(void 0);\n    });\n  };\n}\n\nfunction N(t, e) {\n  for (var n = 0; n < e.length; n++) {\n    var r = e[n];\n    r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);\n  }\n}\n\nfunction R(t, e, n) {\n  return e && N(t.prototype, e), n && N(t, n), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), t;\n}\n\nfunction U() {\n  return (U = Object.assign || function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var n = arguments[e];\n\n      for (var r in n) {\n        Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);\n      }\n    }\n\n    return t;\n  }).apply(this, arguments);\n}\n\nfunction C(t, e) {\n  t.prototype = Object.create(e.prototype), t.prototype.constructor = t, S(t, e);\n}\n\nfunction L(t) {\n  return (L = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  })(t);\n}\n\nfunction S(t, e) {\n  return (S = Object.setPrototypeOf || function (t, e) {\n    return t.__proto__ = e, t;\n  })(t, e);\n}\n\nfunction j() {\n  if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n  if (Reflect.construct.sham) return !1;\n  if (\"function\" == typeof Proxy) return !0;\n\n  try {\n    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;\n  } catch (t) {\n    return !1;\n  }\n}\n\nfunction F(t, e, n) {\n  return (F = j() ? Reflect.construct : function (t, e, n) {\n    var r = [null];\n    r.push.apply(r, e);\n    var o = new (Function.bind.apply(t, r))();\n    return n && S(o, n.prototype), o;\n  }).apply(null, arguments);\n}\n\nfunction D(t) {\n  var e = \"function\" == typeof Map ? new Map() : void 0;\n  return (D = function D(t) {\n    if (null === t || -1 === Function.toString.call(t).indexOf(\"[native code]\")) return t;\n    if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n\n    if (void 0 !== e) {\n      if (e.has(t)) return e.get(t);\n      e.set(t, n);\n    }\n\n    function n() {\n      return F(t, arguments, L(this).constructor);\n    }\n\n    return n.prototype = Object.create(t.prototype, {\n      constructor: {\n        value: n,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), S(n, t);\n  })(t);\n}\n\nfunction H(t) {\n  if (void 0 === t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return t;\n}\n\nfunction B(t, e) {\n  (null == e || e > t.length) && (e = t.length);\n\n  for (var n = 0, r = new Array(e); n < e; n++) {\n    r[n] = t[n];\n  }\n\n  return r;\n}\n\nfunction X(t, e) {\n  var n = \"undefined\" != typeof Symbol && t[Symbol.iterator] || t[\"@@iterator\"];\n  if (n) return (n = n.call(t)).next.bind(n);\n\n  if (Array.isArray(t) || (n = function (t, e) {\n    if (t) {\n      if (\"string\" == typeof t) return B(t, void 0);\n      var n = Object.prototype.toString.call(t).slice(8, -1);\n      return \"Object\" === n && t.constructor && (n = t.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(t) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? B(t, void 0) : void 0;\n    }\n  }(t)) || e && t && \"number\" == typeof t.length) {\n    n && (t = n);\n    var r = 0;\n    return function () {\n      return r >= t.length ? {\n        done: !0\n      } : {\n        done: !1,\n        value: t[r++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar M = (\"setPrototypeOf\" in Object),\n    W = function (t) {\n  function e() {\n    var n;\n    return (n = t.call(this) || this).isInsufficientReservesError = !0, n.name = n.constructor.name, M && Object.setPrototypeOf(H(n), (this instanceof e ? this.constructor : void 0).prototype), n;\n  }\n\n  return C(e, t), e;\n}(D(Error)),\n    V = function (t) {\n  function e() {\n    var n;\n    return (n = t.call(this) || this).isInsufficientInputAmountError = !0, n.name = n.constructor.name, M && Object.setPrototypeOf(H(n), (this instanceof e ? this.constructor : void 0).prototype), n;\n  }\n\n  return C(e, t), e;\n}(D(Error));\n\nfunction G(t, e) {\n  i.greaterThanOrEqual(t, g) || a(!1), i.lessThanOrEqual(t, q[e]) || a(!1);\n}\n\nfunction Y(t) {\n  try {\n    return u.getAddress(t);\n  } catch (t) {\n    a(!1);\n  }\n}\n\nfunction J(t) {\n  return t instanceof i ? t : i.BigInt(\"bigint\" == typeof t ? t.toString() : t);\n}\n\nfunction Q(t) {\n  G(t, m.uint256);\n  var e,\n      n = g;\n  if (i.greaterThan(t, x)) for (n = t, e = i.add(i.divide(t, k), T); i.lessThan(e, n);) {\n    n = e, e = i.divide(i.add(i.divide(t, e), e), k);\n  } else i.notEqual(t, g) && (n = T);\n  return n;\n}\n\nfunction $(t, e, n, r) {\n  if (n > 0 || a(!1), t.length <= n || a(!1), 0 === t.length) return t.push(e), null;\n  var o = t.length === n;\n  if (o && r(t[t.length - 1], e) <= 0) return e;\n\n  for (var i = 0, u = t.length; i < u;) {\n    var s = i + u >>> 1;\n    r(t[s], e) <= 0 ? i = s + 1 : u = s;\n  }\n\n  return t.splice(i, 0, e), o ? t.pop() : null;\n}\n\nvar z,\n    K = function K(t, e, n) {\n  G(i.BigInt(t), m.uint8), this.decimals = t, this.symbol = e, this.name = n;\n},\n    Z = K.ETHER = new K(18, \"Avax\", \"Avax\"),\n    tt = function (t) {\n  function e(e, n, r, o, i) {\n    var a;\n    return (a = t.call(this, r, o, i) || this).chainId = e, a.address = Y(n), a;\n  }\n\n  C(e, t);\n  var n = e.prototype;\n  return n.equals = function (t) {\n    return this === t || this.chainId === t.chainId && this.address === t.address;\n  }, n.sortsBefore = function (t) {\n    return this.chainId !== t.chainId && a(!1), this.address === t.address && a(!1), this.address.toLowerCase() < t.address.toLowerCase();\n  }, e;\n}(K);\n\nfunction et(t, e) {\n  return t instanceof tt && e instanceof tt ? t.equals(e) : !(t instanceof tt || e instanceof tt || t !== e);\n}\n\nvar nt,\n    rt,\n    ot = ((z = {})[exports.ChainId.AVALANCHE] = new tt(exports.ChainId.AVALANCHE, \"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7\", 18, \"WAVAX\", \"Wrapped Avax\"), z),\n    it = c(f),\n    at = c(s),\n    ut = ((nt = {})[exports.Rounding.ROUND_DOWN] = it.ROUND_DOWN, nt[exports.Rounding.ROUND_HALF_UP] = it.ROUND_HALF_UP, nt[exports.Rounding.ROUND_UP] = it.ROUND_UP, nt),\n    st = ((rt = {})[exports.Rounding.ROUND_DOWN] = 0, rt[exports.Rounding.ROUND_HALF_UP] = 1, rt[exports.Rounding.ROUND_UP] = 3, rt),\n    ct = function () {\n  function t(t, e) {\n    void 0 === e && (e = T), this.numerator = J(t), this.denominator = J(e);\n  }\n\n  var e = t.prototype;\n  return e.invert = function () {\n    return new t(this.denominator, this.numerator);\n  }, e.add = function (e) {\n    var n = e instanceof t ? e : new t(J(e));\n    return i.equal(this.denominator, n.denominator) ? new t(i.add(this.numerator, n.numerator), this.denominator) : new t(i.add(i.multiply(this.numerator, n.denominator), i.multiply(n.numerator, this.denominator)), i.multiply(this.denominator, n.denominator));\n  }, e.subtract = function (e) {\n    var n = e instanceof t ? e : new t(J(e));\n    return i.equal(this.denominator, n.denominator) ? new t(i.subtract(this.numerator, n.numerator), this.denominator) : new t(i.subtract(i.multiply(this.numerator, n.denominator), i.multiply(n.numerator, this.denominator)), i.multiply(this.denominator, n.denominator));\n  }, e.lessThan = function (e) {\n    var n = e instanceof t ? e : new t(J(e));\n    return i.lessThan(i.multiply(this.numerator, n.denominator), i.multiply(n.numerator, this.denominator));\n  }, e.equalTo = function (e) {\n    var n = e instanceof t ? e : new t(J(e));\n    return i.equal(i.multiply(this.numerator, n.denominator), i.multiply(n.numerator, this.denominator));\n  }, e.greaterThan = function (e) {\n    var n = e instanceof t ? e : new t(J(e));\n    return i.greaterThan(i.multiply(this.numerator, n.denominator), i.multiply(n.numerator, this.denominator));\n  }, e.multiply = function (e) {\n    var n = e instanceof t ? e : new t(J(e));\n    return new t(i.multiply(this.numerator, n.numerator), i.multiply(this.denominator, n.denominator));\n  }, e.divide = function (e) {\n    var n = e instanceof t ? e : new t(J(e));\n    return new t(i.multiply(this.numerator, n.denominator), i.multiply(this.denominator, n.numerator));\n  }, e.toSignificant = function (t, e, n) {\n    void 0 === e && (e = {\n      groupSeparator: \"\"\n    }), void 0 === n && (n = exports.Rounding.ROUND_HALF_UP), Number.isInteger(t) || a(!1), t > 0 || a(!1), it.set({\n      precision: t + 1,\n      rounding: ut[n]\n    });\n    var r = new it(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(t);\n    return r.toFormat(r.decimalPlaces(), e);\n  }, e.toFixed = function (t, e, n) {\n    return void 0 === e && (e = {\n      groupSeparator: \"\"\n    }), void 0 === n && (n = exports.Rounding.ROUND_HALF_UP), Number.isInteger(t) || a(!1), t >= 0 || a(!1), at.DP = t, at.RM = st[n], new at(this.numerator.toString()).div(this.denominator.toString()).toFormat(t, e);\n  }, R(t, [{\n    key: \"quotient\",\n    get: function get() {\n      return i.divide(this.numerator, this.denominator);\n    }\n  }, {\n    key: \"remainder\",\n    get: function get() {\n      return new t(i.remainder(this.numerator, this.denominator), this.denominator);\n    }\n  }]), t;\n}(),\n    ft = c(s),\n    lt = function (t) {\n  function e(e, n) {\n    var r,\n        o = J(n);\n    return G(o, m.uint256), (r = t.call(this, o, i.exponentiate(A, i.BigInt(e.decimals))) || this).currency = e, r;\n  }\n\n  C(e, t), e.ether = function (t) {\n    return new e(Z, t);\n  };\n  var n = e.prototype;\n  return n.add = function (t) {\n    return et(this.currency, t.currency) || a(!1), new e(this.currency, i.add(this.raw, t.raw));\n  }, n.subtract = function (t) {\n    return et(this.currency, t.currency) || a(!1), new e(this.currency, i.subtract(this.raw, t.raw));\n  }, n.toSignificant = function (e, n, r) {\n    return void 0 === e && (e = 6), void 0 === r && (r = exports.Rounding.ROUND_DOWN), t.prototype.toSignificant.call(this, e, n, r);\n  }, n.toFixed = function (e, n, r) {\n    return void 0 === e && (e = this.currency.decimals), void 0 === r && (r = exports.Rounding.ROUND_DOWN), e <= this.currency.decimals || a(!1), t.prototype.toFixed.call(this, e, n, r);\n  }, n.toExact = function (t) {\n    return void 0 === t && (t = {\n      groupSeparator: \"\"\n    }), ft.DP = this.currency.decimals, new ft(this.numerator.toString()).div(this.denominator.toString()).toFormat(t);\n  }, R(e, [{\n    key: \"raw\",\n    get: function get() {\n      return this.numerator;\n    }\n  }]), e;\n}(ct),\n    ht = function (t) {\n  function e(e, n) {\n    var r;\n    return (r = t.call(this, e, n) || this).token = e, r;\n  }\n\n  C(e, t);\n  var n = e.prototype;\n  return n.add = function (t) {\n    return this.token.equals(t.token) || a(!1), new e(this.token, i.add(this.raw, t.raw));\n  }, n.subtract = function (t) {\n    return this.token.equals(t.token) || a(!1), new e(this.token, i.subtract(this.raw, t.raw));\n  }, e;\n}(lt),\n    pt = function (t) {\n  function e(e, n, r, o) {\n    var a;\n    return (a = t.call(this, o, r) || this).baseCurrency = e, a.quoteCurrency = n, a.scalar = new ct(i.exponentiate(A, i.BigInt(e.decimals)), i.exponentiate(A, i.BigInt(n.decimals))), a;\n  }\n\n  C(e, t), e.fromRoute = function (t) {\n    for (var n, r = [], o = X(t.pairs.entries()); !(n = o()).done;) {\n      var i = n.value,\n          a = i[1];\n      r.push(t.path[i[0]].equals(a.token0) ? new e(a.reserve0.currency, a.reserve1.currency, a.reserve0.raw, a.reserve1.raw) : new e(a.reserve1.currency, a.reserve0.currency, a.reserve1.raw, a.reserve0.raw));\n    }\n\n    return r.slice(1).reduce(function (t, e) {\n      return t.multiply(e);\n    }, r[0]);\n  };\n  var n = e.prototype;\n  return n.invert = function () {\n    return new e(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator);\n  }, n.multiply = function (n) {\n    et(this.quoteCurrency, n.baseCurrency) || a(!1);\n    var r = t.prototype.multiply.call(this, n);\n    return new e(this.baseCurrency, n.quoteCurrency, r.denominator, r.numerator);\n  }, n.quote = function (e) {\n    return et(e.currency, this.baseCurrency) || a(!1), this.quoteCurrency instanceof tt ? new ht(this.quoteCurrency, t.prototype.multiply.call(this, e.raw).quotient) : lt.ether(t.prototype.multiply.call(this, e.raw).quotient);\n  }, n.toSignificant = function (t, e, n) {\n    return void 0 === t && (t = 6), this.adjusted.toSignificant(t, e, n);\n  }, n.toFixed = function (t, e, n) {\n    return void 0 === t && (t = 4), this.adjusted.toFixed(t, e, n);\n  }, R(e, [{\n    key: \"raw\",\n    get: function get() {\n      return new ct(this.numerator, this.denominator);\n    }\n  }, {\n    key: \"adjusted\",\n    get: function get() {\n      return t.prototype.multiply.call(this, this.scalar);\n    }\n  }]), e;\n}(ct),\n    dt = {},\n    vt = function () {\n  function t(e, n) {\n    var r = e.token.sortsBefore(n.token) ? [e, n] : [n, e];\n    this.liquidityToken = new tt(r[0].token.chainId, t.getAddress(r[0].token, r[1].token), 18, \"SLR-V2\", \"Solar V2\"), this.tokenAmounts = r;\n  }\n\n  t.getAddress = function (t, e) {\n    var n,\n        r,\n        o,\n        i,\n        a,\n        s = t.sortsBefore(e) ? [t, e] : [e, t];\n    return void 0 === (null == (n = dt) || null == (r = n[s[0].address]) ? void 0 : r[s[1].address]) && (dt = U({}, dt, ((a = {})[s[0].address] = U({}, null == (o = dt) ? void 0 : o[s[0].address], ((i = {})[s[1].address] = u.getCreate2Address(\"0x2b85c99d6f40f584c8742aafd93844309df396cb\", l.keccak256([\"bytes\"], [l.pack([\"address\", \"address\"], [s[0].address, s[1].address])]), y), i)), a))), dt[s[0].address][s[1].address];\n  };\n\n  var e = t.prototype;\n  return e.involvesToken = function (t) {\n    return t.equals(this.token0) || t.equals(this.token1);\n  }, e.priceOf = function (t) {\n    return this.involvesToken(t) || a(!1), t.equals(this.token0) ? this.token0Price : this.token1Price;\n  }, e.reserveOf = function (t) {\n    return this.involvesToken(t) || a(!1), t.equals(this.token0) ? this.reserve0 : this.reserve1;\n  }, e.getOutputAmount = function (e) {\n    if (this.involvesToken(e.token) || a(!1), i.equal(this.reserve0.raw, g) || i.equal(this.reserve1.raw, g)) throw new W();\n    var n = this.reserveOf(e.token),\n        r = this.reserveOf(e.token.equals(this.token0) ? this.token1 : this.token0),\n        o = i.multiply(e.raw, I),\n        u = i.multiply(o, r.raw),\n        s = i.add(i.multiply(n.raw, E), o),\n        c = new ht(e.token.equals(this.token0) ? this.token1 : this.token0, i.divide(u, s));\n    if (i.equal(c.raw, g)) throw new V();\n    return [c, new t(n.add(e), r.subtract(c))];\n  }, e.getInputAmount = function (e) {\n    if (this.involvesToken(e.token) || a(!1), i.equal(this.reserve0.raw, g) || i.equal(this.reserve1.raw, g) || i.greaterThanOrEqual(e.raw, this.reserveOf(e.token).raw)) throw new W();\n    var n = this.reserveOf(e.token),\n        r = this.reserveOf(e.token.equals(this.token0) ? this.token1 : this.token0),\n        o = i.multiply(i.multiply(r.raw, e.raw), E),\n        u = i.multiply(i.subtract(n.raw, e.raw), I),\n        s = new ht(e.token.equals(this.token0) ? this.token1 : this.token0, i.add(i.divide(o, u), T));\n    return [s, new t(r.add(s), n.subtract(e))];\n  }, e.getLiquidityMinted = function (t, e, n) {\n    t.token.equals(this.liquidityToken) || a(!1);\n    var r,\n        o = e.token.sortsBefore(n.token) ? [e, n] : [n, e];\n    if (o[0].token.equals(this.token0) && o[1].token.equals(this.token1) || a(!1), i.equal(t.raw, g)) r = i.subtract(Q(i.multiply(o[0].raw, o[1].raw)), w);else {\n      var u = i.divide(i.multiply(o[0].raw, t.raw), this.reserve0.raw),\n          s = i.divide(i.multiply(o[1].raw, t.raw), this.reserve1.raw);\n      r = i.lessThanOrEqual(u, s) ? u : s;\n    }\n    if (!i.greaterThan(r, g)) throw new V();\n    return new ht(this.liquidityToken, r);\n  }, e.getLiquidityValue = function (t, e, n, r, o) {\n    var u;\n\n    if (void 0 === r && (r = !1), this.involvesToken(t) || a(!1), e.token.equals(this.liquidityToken) || a(!1), n.token.equals(this.liquidityToken) || a(!1), i.lessThanOrEqual(n.raw, e.raw) || a(!1), r) {\n      o || a(!1);\n      var s = J(o);\n      if (i.equal(s, g)) u = e;else {\n        var c = Q(i.multiply(this.reserve0.raw, this.reserve1.raw)),\n            f = Q(s);\n\n        if (i.greaterThan(c, f)) {\n          var l = i.multiply(e.raw, i.subtract(c, f)),\n              h = i.add(i.multiply(c, b), f),\n              p = i.divide(l, h);\n          u = e.add(new ht(this.liquidityToken, p));\n        } else u = e;\n      }\n    } else u = e;\n\n    return new ht(t, i.divide(i.multiply(n.raw, this.reserveOf(t).raw), u.raw));\n  }, R(t, [{\n    key: \"token0Price\",\n    get: function get() {\n      return new pt(this.token0, this.token1, this.tokenAmounts[0].raw, this.tokenAmounts[1].raw);\n    }\n  }, {\n    key: \"token1Price\",\n    get: function get() {\n      return new pt(this.token1, this.token0, this.tokenAmounts[1].raw, this.tokenAmounts[0].raw);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return this.token0.chainId;\n    }\n  }, {\n    key: \"token0\",\n    get: function get() {\n      return this.tokenAmounts[0].token;\n    }\n  }, {\n    key: \"token1\",\n    get: function get() {\n      return this.tokenAmounts[1].token;\n    }\n  }, {\n    key: \"reserve0\",\n    get: function get() {\n      return this.tokenAmounts[0];\n    }\n  }, {\n    key: \"reserve1\",\n    get: function get() {\n      return this.tokenAmounts[1];\n    }\n  }]), t;\n}(),\n    mt = function () {\n  function t(t, e, n) {\n    t.length > 0 || a(!1), t.every(function (e) {\n      return e.chainId === t[0].chainId;\n    }) || a(!1), e instanceof tt && t[0].involvesToken(e) || e === Z && t[0].involvesToken(ot[t[0].chainId]) || a(!1), void 0 === n || n instanceof tt && t[t.length - 1].involvesToken(n) || n === Z && t[t.length - 1].involvesToken(ot[t[0].chainId]) || a(!1);\n\n    for (var r, o = [e instanceof tt ? e : ot[t[0].chainId]], i = X(t.entries()); !(r = i()).done;) {\n      var u = r.value,\n          s = u[1],\n          c = o[u[0]];\n      c.equals(s.token0) || c.equals(s.token1) || a(!1);\n      var f = c.equals(s.token0) ? s.token1 : s.token0;\n      o.push(f);\n    }\n\n    this.pairs = t, this.path = o, this.midPrice = pt.fromRoute(this), this.input = e, this.output = null != n ? n : o[o.length - 1];\n  }\n\n  return R(t, [{\n    key: \"chainId\",\n    get: function get() {\n      return this.pairs[0].chainId;\n    }\n  }]), t;\n}(),\n    yt = new ct(O),\n    wt = function (t) {\n  function e() {\n    return t.apply(this, arguments) || this;\n  }\n\n  C(e, t);\n  var n = e.prototype;\n  return n.toSignificant = function (t, e, n) {\n    return void 0 === t && (t = 5), this.multiply(yt).toSignificant(t, e, n);\n  }, n.toFixed = function (t, e, n) {\n    return void 0 === t && (t = 2), this.multiply(yt).toFixed(t, e, n);\n  }, e;\n}(ct);\n\nfunction gt(t, e) {\n  return et(t.inputAmount.currency, e.inputAmount.currency) || a(!1), et(t.outputAmount.currency, e.outputAmount.currency) || a(!1), t.outputAmount.equalTo(e.outputAmount) ? t.inputAmount.equalTo(e.inputAmount) ? 0 : t.inputAmount.lessThan(e.inputAmount) ? -1 : 1 : t.outputAmount.lessThan(e.outputAmount) ? 1 : -1;\n}\n\nfunction Tt(t, e) {\n  var n = gt(t, e);\n  return 0 !== n ? n : t.priceImpact.lessThan(e.priceImpact) ? -1 : t.priceImpact.greaterThan(e.priceImpact) ? 1 : t.route.path.length - e.route.path.length;\n}\n\nfunction kt(t, e) {\n  return t instanceof ht ? t : t.currency === Z ? new ht(ot[e], t.raw) : void a(!1);\n}\n\nfunction xt(t, e) {\n  return t instanceof tt ? t : t === Z ? ot[e] : void a(!1);\n}\n\nvar bt = function () {\n  function t(t, e, n) {\n    var r,\n        o,\n        i,\n        u = new Array(t.path.length),\n        s = new Array(t.pairs.length);\n\n    if (n === exports.TradeType.EXACT_INPUT) {\n      et(e.currency, t.input) || a(!1), u[0] = kt(e, t.chainId);\n\n      for (var c = 0; c < t.path.length - 1; c++) {\n        var f = t.pairs[c].getOutputAmount(u[c]),\n            l = f[1];\n        u[c + 1] = f[0], s[c] = l;\n      }\n    } else {\n      et(e.currency, t.output) || a(!1), u[u.length - 1] = kt(e, t.chainId);\n\n      for (var h = t.path.length - 1; h > 0; h--) {\n        var p = t.pairs[h - 1].getInputAmount(u[h]),\n            d = p[1];\n        u[h - 1] = p[0], s[h - 1] = d;\n      }\n    }\n\n    this.route = t, this.tradeType = n, this.inputAmount = n === exports.TradeType.EXACT_INPUT ? e : t.input === Z ? lt.ether(u[0].raw) : u[0], this.outputAmount = n === exports.TradeType.EXACT_OUTPUT ? e : t.output === Z ? lt.ether(u[u.length - 1].raw) : u[u.length - 1], this.executionPrice = new pt(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.raw, this.outputAmount.raw), this.nextMidPrice = pt.fromRoute(new mt(s, t.input)), this.priceImpact = (r = this.outputAmount, i = (o = t.midPrice.raw.multiply(this.inputAmount.raw)).subtract(r.raw).divide(o), new wt(i.numerator, i.denominator));\n  }\n\n  t.exactIn = function (e, n) {\n    return new t(e, n, exports.TradeType.EXACT_INPUT);\n  }, t.exactOut = function (e, n) {\n    return new t(e, n, exports.TradeType.EXACT_OUTPUT);\n  };\n  var e = t.prototype;\n  return e.minimumAmountOut = function (t) {\n    if (t.lessThan(g) && a(!1), this.tradeType === exports.TradeType.EXACT_OUTPUT) return this.outputAmount;\n    var e = new ct(T).add(t).invert().multiply(this.outputAmount.raw).quotient;\n    return this.outputAmount instanceof ht ? new ht(this.outputAmount.token, e) : lt.ether(e);\n  }, e.maximumAmountIn = function (t) {\n    if (t.lessThan(g) && a(!1), this.tradeType === exports.TradeType.EXACT_INPUT) return this.inputAmount;\n    var e = new ct(T).add(t).multiply(this.inputAmount.raw).quotient;\n    return this.inputAmount instanceof ht ? new ht(this.inputAmount.token, e) : lt.ether(e);\n  }, t.bestTradeExactIn = function (e, n, r, o, i, u, s) {\n    var c = void 0 === o ? {} : o,\n        f = c.maxNumResults,\n        l = void 0 === f ? 3 : f,\n        h = c.maxHops,\n        p = void 0 === h ? 3 : h;\n    void 0 === i && (i = []), void 0 === u && (u = n), void 0 === s && (s = []), e.length > 0 || a(!1), p > 0 || a(!1), u === n || i.length > 0 || a(!1);\n    var d = n instanceof ht ? n.token.chainId : r instanceof tt ? r.chainId : void 0;\n    void 0 === d && a(!1);\n\n    for (var v = kt(n, d), m = xt(r, d), y = 0; y < e.length; y++) {\n      var w = e[y];\n\n      if ((w.token0.equals(v.token) || w.token1.equals(v.token)) && !w.reserve0.equalTo(g) && !w.reserve1.equalTo(g)) {\n        var T = void 0;\n\n        try {\n          T = w.getOutputAmount(v)[0];\n        } catch (t) {\n          if (t instanceof Error) continue;\n          throw t;\n        }\n\n        if (T.token.equals(m)) $(s, new t(new mt([].concat(i, [w]), u.currency, r), u, exports.TradeType.EXACT_INPUT), l, Tt);else if (p > 1 && e.length > 1) {\n          var k = e.slice(0, y).concat(e.slice(y + 1, e.length));\n          t.bestTradeExactIn(k, T, r, {\n            maxNumResults: l,\n            maxHops: p - 1\n          }, [].concat(i, [w]), u, s);\n        }\n      }\n    }\n\n    return s;\n  }, t.bestTradeExactOut = function (e, n, r, o, i, u, s) {\n    var c = void 0 === o ? {} : o,\n        f = c.maxNumResults,\n        l = void 0 === f ? 3 : f,\n        h = c.maxHops,\n        p = void 0 === h ? 3 : h;\n    void 0 === i && (i = []), void 0 === u && (u = r), void 0 === s && (s = []), e.length > 0 || a(!1), p > 0 || a(!1), u === r || i.length > 0 || a(!1);\n    var d = r instanceof ht ? r.token.chainId : n instanceof tt ? n.chainId : void 0;\n    void 0 === d && a(!1);\n\n    for (var v = kt(r, d), m = xt(n, d), y = 0; y < e.length; y++) {\n      var w = e[y];\n\n      if ((w.token0.equals(v.token) || w.token1.equals(v.token)) && !w.reserve0.equalTo(g) && !w.reserve1.equalTo(g)) {\n        var T = void 0;\n\n        try {\n          T = w.getInputAmount(v)[0];\n        } catch (t) {\n          if (t instanceof Error) continue;\n          throw t;\n        }\n\n        if (T.token.equals(m)) $(s, new t(new mt([w].concat(i), n, u.currency), u, exports.TradeType.EXACT_OUTPUT), l, Tt);else if (p > 1 && e.length > 1) {\n          var k = e.slice(0, y).concat(e.slice(y + 1, e.length));\n          t.bestTradeExactOut(k, n, T, {\n            maxNumResults: l,\n            maxHops: p - 1\n          }, [w].concat(i), u, s);\n        }\n      }\n    }\n\n    return s;\n  }, t;\n}();\n\nfunction At(t) {\n  return \"0x\" + t.raw.toString(16);\n}\n\nvar Ot,\n    It,\n    Et = function () {\n  function t() {}\n\n  return t.swapCallParameters = function (t, e) {\n    var n = t.inputAmount.currency === Z,\n        r = t.outputAmount.currency === Z;\n    n && r && a(!1), e.ttl > 0 || a(!1);\n    var o,\n        i,\n        u,\n        s = Y(e.recipient),\n        c = At(t.maximumAmountIn(e.allowedSlippage)),\n        f = At(t.minimumAmountOut(e.allowedSlippage)),\n        l = t.route.path.map(function (t) {\n      return t.address;\n    }),\n        h = \"0x\" + (Math.floor(new Date().getTime() / 1e3) + e.ttl).toString(16),\n        p = Boolean(e.feeOnTransfer);\n\n    switch (t.tradeType) {\n      case exports.TradeType.EXACT_INPUT:\n        n ? (o = p ? \"swapExactETHForTokensSupportingFeeOnTransferTokens\" : \"swapExactETHForTokens\", i = [f, l, s, h], u = c) : r ? (o = p ? \"swapExactTokensForETHSupportingFeeOnTransferTokens\" : \"swapExactTokensForETH\", i = [c, f, l, s, h], u = \"0x0\") : (o = p ? \"swapExactTokensForTokensSupportingFeeOnTransferTokens\" : \"swapExactTokensForTokens\", i = [c, f, l, s, h], u = \"0x0\");\n        break;\n\n      case exports.TradeType.EXACT_OUTPUT:\n        p && a(!1), n ? (o = \"swapETHForExactTokens\", i = [f, l, s, h], u = c) : r ? (o = \"swapTokensForExactETH\", i = [f, c, l, s, h], u = \"0x0\") : (o = \"swapTokensForExactTokens\", i = [f, c, l, s, h], u = \"0x0\");\n    }\n\n    return {\n      methodName: o,\n      args: i,\n      value: u\n    };\n  }, t;\n}(),\n    qt = (function (t) {\n  var e = function (t) {\n    var e = Object.prototype,\n        n = e.hasOwnProperty,\n        r = \"function\" == typeof Symbol ? Symbol : {},\n        o = r.iterator || \"@@iterator\",\n        i = r.asyncIterator || \"@@asyncIterator\",\n        a = r.toStringTag || \"@@toStringTag\";\n\n    function u(t, e, n) {\n      return Object.defineProperty(t, e, {\n        value: n,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }), t[e];\n    }\n\n    try {\n      u({}, \"\");\n    } catch (t) {\n      u = function u(t, e, n) {\n        return t[e] = n;\n      };\n    }\n\n    function s(t, e, n, r) {\n      var o = Object.create((e && e.prototype instanceof l ? e : l).prototype),\n          i = new b(r || []);\n      return o._invoke = function (t, e, n) {\n        var r = \"suspendedStart\";\n        return function (o, i) {\n          if (\"executing\" === r) throw new Error(\"Generator is already running\");\n\n          if (\"completed\" === r) {\n            if (\"throw\" === o) throw i;\n            return {\n              value: void 0,\n              done: !0\n            };\n          }\n\n          for (n.method = o, n.arg = i;;) {\n            var a = n.delegate;\n\n            if (a) {\n              var u = T(a, n);\n\n              if (u) {\n                if (u === f) continue;\n                return u;\n              }\n            }\n\n            if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n              if (\"suspendedStart\" === r) throw r = \"completed\", n.arg;\n              n.dispatchException(n.arg);\n            } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n            r = \"executing\";\n            var s = c(t, e, n);\n\n            if (\"normal\" === s.type) {\n              if (r = n.done ? \"completed\" : \"suspendedYield\", s.arg === f) continue;\n              return {\n                value: s.arg,\n                done: n.done\n              };\n            }\n\n            \"throw\" === s.type && (r = \"completed\", n.method = \"throw\", n.arg = s.arg);\n          }\n        };\n      }(t, n, i), o;\n    }\n\n    function c(t, e, n) {\n      try {\n        return {\n          type: \"normal\",\n          arg: t.call(e, n)\n        };\n      } catch (t) {\n        return {\n          type: \"throw\",\n          arg: t\n        };\n      }\n    }\n\n    t.wrap = s;\n    var f = {};\n\n    function l() {}\n\n    function h() {}\n\n    function p() {}\n\n    var d = {};\n    u(d, o, function () {\n      return this;\n    });\n    var v = Object.getPrototypeOf,\n        m = v && v(v(A([])));\n    m && m !== e && n.call(m, o) && (d = m);\n    var y = p.prototype = l.prototype = Object.create(d);\n\n    function w(t) {\n      [\"next\", \"throw\", \"return\"].forEach(function (e) {\n        u(t, e, function (t) {\n          return this._invoke(e, t);\n        });\n      });\n    }\n\n    function g(t, e) {\n      var r;\n\n      this._invoke = function (o, i) {\n        function a() {\n          return new e(function (r, a) {\n            !function r(o, i, a, u) {\n              var s = c(t[o], t, i);\n\n              if (\"throw\" !== s.type) {\n                var f = s.arg,\n                    l = f.value;\n                return l && \"object\" == typeof l && n.call(l, \"__await\") ? e.resolve(l.__await).then(function (t) {\n                  r(\"next\", t, a, u);\n                }, function (t) {\n                  r(\"throw\", t, a, u);\n                }) : e.resolve(l).then(function (t) {\n                  f.value = t, a(f);\n                }, function (t) {\n                  return r(\"throw\", t, a, u);\n                });\n              }\n\n              u(s.arg);\n            }(o, i, r, a);\n          });\n        }\n\n        return r = r ? r.then(a, a) : a();\n      };\n    }\n\n    function T(t, e) {\n      var n = t.iterator[e.method];\n\n      if (void 0 === n) {\n        if (e.delegate = null, \"throw\" === e.method) {\n          if (t.iterator.return && (e.method = \"return\", e.arg = void 0, T(t, e), \"throw\" === e.method)) return f;\n          e.method = \"throw\", e.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n\n        return f;\n      }\n\n      var r = c(n, t.iterator, e.arg);\n      if (\"throw\" === r.type) return e.method = \"throw\", e.arg = r.arg, e.delegate = null, f;\n      var o = r.arg;\n      return o ? o.done ? (e[t.resultName] = o.value, e.next = t.nextLoc, \"return\" !== e.method && (e.method = \"next\", e.arg = void 0), e.delegate = null, f) : o : (e.method = \"throw\", e.arg = new TypeError(\"iterator result is not an object\"), e.delegate = null, f);\n    }\n\n    function k(t) {\n      var e = {\n        tryLoc: t[0]\n      };\n      1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n    }\n\n    function x(t) {\n      var e = t.completion || {};\n      e.type = \"normal\", delete e.arg, t.completion = e;\n    }\n\n    function b(t) {\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }], t.forEach(k, this), this.reset(!0);\n    }\n\n    function A(t) {\n      if (t) {\n        var e = t[o];\n        if (e) return e.call(t);\n        if (\"function\" == typeof t.next) return t;\n\n        if (!isNaN(t.length)) {\n          var r = -1,\n              i = function e() {\n            for (; ++r < t.length;) {\n              if (n.call(t, r)) return e.value = t[r], e.done = !1, e;\n            }\n\n            return e.value = void 0, e.done = !0, e;\n          };\n\n          return i.next = i;\n        }\n      }\n\n      return {\n        next: O\n      };\n    }\n\n    function O() {\n      return {\n        value: void 0,\n        done: !0\n      };\n    }\n\n    return h.prototype = p, u(y, \"constructor\", p), u(p, \"constructor\", h), h.displayName = u(p, a, \"GeneratorFunction\"), t.isGeneratorFunction = function (t) {\n      var e = \"function\" == typeof t && t.constructor;\n      return !!e && (e === h || \"GeneratorFunction\" === (e.displayName || e.name));\n    }, t.mark = function (t) {\n      return Object.setPrototypeOf ? Object.setPrototypeOf(t, p) : (t.__proto__ = p, u(t, a, \"GeneratorFunction\")), t.prototype = Object.create(y), t;\n    }, t.awrap = function (t) {\n      return {\n        __await: t\n      };\n    }, w(g.prototype), u(g.prototype, i, function () {\n      return this;\n    }), t.AsyncIterator = g, t.async = function (e, n, r, o, i) {\n      void 0 === i && (i = Promise);\n      var a = new g(s(e, n, r, o), i);\n      return t.isGeneratorFunction(n) ? a : a.next().then(function (t) {\n        return t.done ? t.value : a.next();\n      });\n    }, w(y), u(y, a, \"Generator\"), u(y, o, function () {\n      return this;\n    }), u(y, \"toString\", function () {\n      return \"[object Generator]\";\n    }), t.keys = function (t) {\n      var e = [];\n\n      for (var n in t) {\n        e.push(n);\n      }\n\n      return e.reverse(), function n() {\n        for (; e.length;) {\n          var r = e.pop();\n          if (r in t) return n.value = r, n.done = !1, n;\n        }\n\n        return n.done = !0, n;\n      };\n    }, t.values = A, b.prototype = {\n      constructor: b,\n      reset: function reset(t) {\n        if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = void 0, this.tryEntries.forEach(x), !t) for (var e in this) {\n          \"t\" === e.charAt(0) && n.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0);\n        }\n      },\n      stop: function stop() {\n        this.done = !0;\n        var t = this.tryEntries[0].completion;\n        if (\"throw\" === t.type) throw t.arg;\n        return this.rval;\n      },\n      dispatchException: function dispatchException(t) {\n        if (this.done) throw t;\n        var e = this;\n\n        function r(n, r) {\n          return a.type = \"throw\", a.arg = t, e.next = n, r && (e.method = \"next\", e.arg = void 0), !!r;\n        }\n\n        for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n          var i = this.tryEntries[o],\n              a = i.completion;\n          if (\"root\" === i.tryLoc) return r(\"end\");\n\n          if (i.tryLoc <= this.prev) {\n            var u = n.call(i, \"catchLoc\"),\n                s = n.call(i, \"finallyLoc\");\n\n            if (u && s) {\n              if (this.prev < i.catchLoc) return r(i.catchLoc, !0);\n              if (this.prev < i.finallyLoc) return r(i.finallyLoc);\n            } else if (u) {\n              if (this.prev < i.catchLoc) return r(i.catchLoc, !0);\n            } else {\n              if (!s) throw new Error(\"try statement without catch or finally\");\n              if (this.prev < i.finallyLoc) return r(i.finallyLoc);\n            }\n          }\n        }\n      },\n      abrupt: function abrupt(t, e) {\n        for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n          var o = this.tryEntries[r];\n\n          if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n            var i = o;\n            break;\n          }\n        }\n\n        i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n        var a = i ? i.completion : {};\n        return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, f) : this.complete(a);\n      },\n      complete: function complete(t, e) {\n        if (\"throw\" === t.type) throw t.arg;\n        return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), f;\n      },\n      finish: function finish(t) {\n        for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n          var n = this.tryEntries[e];\n          if (n.finallyLoc === t) return this.complete(n.completion, n.afterLoc), x(n), f;\n        }\n      },\n      catch: function _catch(t) {\n        for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n          var n = this.tryEntries[e];\n\n          if (n.tryLoc === t) {\n            var r = n.completion;\n\n            if (\"throw\" === r.type) {\n              var o = r.arg;\n              x(n);\n            }\n\n            return o;\n          }\n        }\n\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function delegateYield(t, e, n) {\n        return this.delegate = {\n          iterator: A(t),\n          resultName: e,\n          nextLoc: n\n        }, \"next\" === this.method && (this.arg = void 0), f;\n      }\n    }, t;\n  }(t.exports);\n\n  try {\n    regeneratorRuntime = e;\n  } catch (t) {\n    \"object\" == typeof globalThis ? globalThis.regeneratorRuntime = e : Function(\"r\", \"regeneratorRuntime = r\")(e);\n  }\n}(It = {\n  exports: {}\n}), It.exports),\n    _t = [{\n  constant: !0,\n  inputs: [],\n  name: \"decimals\",\n  outputs: [{\n    name: \"\",\n    type: \"uint8\"\n  }],\n  payable: !1,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  constant: !0,\n  inputs: [{\n    name: \"\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  payable: !1,\n  stateMutability: \"view\",\n  type: \"function\"\n}],\n    Pt = ((Ot = {})[exports.ChainId.AVALANCHE] = {\n  \"0x5ce9680bddc91d955a51b959f5cabaf466b0be5a\": 18\n}, Ot),\n    Nt = function () {\n  function t() {}\n\n  return t.fetchTokenData = function () {\n    var t = P(qt.mark(function t(e, n, r, o, i) {\n      var a, u;\n      return qt.wrap(function (t) {\n        for (;;) {\n          switch (t.prev = t.next) {\n            case 0:\n              if (void 0 === r && (r = d.getDefaultProvider(p.getNetwork(e))), \"number\" != typeof (null == (a = Pt) || null == (u = a[e]) ? void 0 : u[n])) {\n                t.next = 5;\n                break;\n              }\n\n              t.t0 = Pt[e][n], t.next = 8;\n              break;\n\n            case 5:\n              return t.next = 7, new h.Contract(n, _t, r).decimals().then(function (t) {\n                var r, o, i;\n                return Pt = U({}, Pt, ((i = {})[e] = U({}, null == (r = Pt) ? void 0 : r[e], ((o = {})[n] = t, o)), i)), t;\n              });\n\n            case 7:\n              t.t0 = t.sent;\n\n            case 8:\n              return t.abrupt(\"return\", new tt(e, n, t.t0, o, i));\n\n            case 10:\n            case \"end\":\n              return t.stop();\n          }\n        }\n      }, t);\n    }));\n    return function (e, n, r, o, i) {\n      return t.apply(this, arguments);\n    };\n  }(), t.fetchPairData = function () {\n    var t = P(qt.mark(function t(e, n, r) {\n      var o, i, u, s, c;\n      return qt.wrap(function (t) {\n        for (;;) {\n          switch (t.prev = t.next) {\n            case 0:\n              return void 0 === r && (r = d.getDefaultProvider(p.getNetwork(e.chainId))), e.chainId !== n.chainId && a(!1), o = vt.getAddress(e, n), t.next = 5, new h.Contract(o, v.abi, r).getReserves();\n\n            case 5:\n              return u = (i = t.sent)[0], s = i[1], c = e.sortsBefore(n) ? [u, s] : [s, u], t.abrupt(\"return\", new vt(new ht(e, c[0]), new ht(n, c[1])));\n\n            case 10:\n            case \"end\":\n              return t.stop();\n          }\n        }\n      }, t);\n    }));\n    return function (e, n, r) {\n      return t.apply(this, arguments);\n    };\n  }(), t;\n}();\n\nexports.JSBI = i, exports.Currency = K, exports.CurrencyAmount = lt, exports.ETHER = Z, exports.FACTORY_ADDRESS = \"0x2b85c99d6f40f584c8742aafd93844309df396cb\", exports.Fetcher = Nt, exports.Fraction = ct, exports.INIT_CODE_HASH = y, exports.InsufficientInputAmountError = V, exports.InsufficientReservesError = W, exports.MINIMUM_LIQUIDITY = w, exports.Pair = vt, exports.Percent = wt, exports.Price = pt, exports.Route = mt, exports.Router = Et, exports.Token = tt, exports.TokenAmount = ht, exports.Trade = bt, exports.WETH = ot, exports.currencyEquals = et, exports.inputOutputComparator = gt, exports.tradeComparator = Tt;","map":{"version":3,"sources":["../src/constants.ts","../src/errors.ts","../src/utils.ts","../src/entities/currency.ts","../src/entities/token.ts","../src/entities/fractions/fraction.ts","../src/entities/fractions/currencyAmount.ts","../src/entities/fractions/tokenAmount.ts","../src/entities/fractions/price.ts","../src/entities/pair.ts","../src/entities/route.ts","../src/entities/fractions/percent.ts","../src/entities/trade.ts","../src/router.ts","../node_modules/regenerator-runtime/runtime.js","../src/fetcher.ts"],"names":["ChainId","TradeType","Rounding","INIT_CODE_HASH","MINIMUM_LIQUIDITY","JSBI","BigInt","ZERO","ONE","TWO","THREE","FIVE","TEN","_100","_997","_1000","SolidityType","SOLIDITY_TYPE_MAXIMA","uint8","uint256","CAN_SET_PROTOTYPE","Object","InsufficientReservesError","Error","name","_this","constructor","setPrototypeOf","prototype","InsufficientInputAmountError","_this2","validateSolidityTypeInstance","value","solidityType","invariant","greaterThanOrEqual","lessThanOrEqual","validateAndParseAddress","address","getAddress","error","parseBigintIsh","bigintIsh","toString","sqrt","y","z","x","greaterThan","add","divide","lessThan","notEqual","sortedInsert","items","maxSize","comparator","length","push","isFull","lo","hi","mid","splice","pop","Currency","decimals","symbol","ETHER","Token","chainId","equals","other","this","sortsBefore","toLowerCase","currencyEquals","currencyA","currencyB","WETH","AVALANCHE","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","remainder","invert","otherParsed","equal","multiply","subtract","equalTo","toSignificant","significantDigits","format","groupSeparator","rounding","Number","isInteger","set","precision","quotient","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","CurrencyAmount","ether","amount","currency","parsedAmount","exponentiate","raw","toExact","TokenAmount","token","Price","fromRoute","route","prices","pair","pairs","entries","path","token0","reserve0","reserve1","slice","reduce","accumulator","currentValue","baseCurrency","quoteCurrency","scalar","fraction","quote","currencyAmount","_Fraction","adjusted","PAIR_ADDRESS_CACHE","Pair","tokenA","tokenB","tokens","undefined","getCreate2Address","keccak256","pack","tokenAmountA","tokenAmountB","tokenAmounts","liquidityToken","involvesToken","token1","priceOf","token0Price","token1Price","reserveOf","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","liquidity","amount0","amount1","getLiquidityValue","feeOn","kLast","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","Route","input","output","every","currentInput","midPrice","_100_PERCENT","Percent","exactQuote","slippage","inputOutputComparator","a","b","tradeComparator","ioComp","priceImpact","wrappedAmount","wrappedCurrency","Trade","exactIn","amountIn","EXACT_INPUT","exactOut","amountOut","EXACT_OUTPUT","tradeType","amounts","Array","nextPairs","i","nextPair","executionPrice","nextMidPrice","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","bestTradeExactIn","currencyAmountIn","currencyOut","maxNumResults","maxHops","currentPairs","originalAmountIn","bestTrades","tokenOut","pairsExcludingThisPair","concat","bestTradeExactOut","currencyIn","currencyAmountOut","originalAmountOut","tokenIn","toHex","Router","swapCallParameters","trade","options","etherIn","etherOut","ttl","to","recipient","allowedSlippage","map","deadline","Math","floor","Date","getTime","useFeeOnTransfer","Boolean","feeOnTransfer","methodName","args","runtime","exports","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","mark","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","keys","object","reverse","iterable","iteratorMethod","isNaN","doneResult","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","TOKEN_DECIMALS_CACHE","Fetcher","fetchTokenData","provider","getDefaultProvider","getNetwork","Contract","ERC20","fetchPairData","reserves0","reserves1","IMoonwalkerPair","abi","getReserves","balances"],"mappings":"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","sourcesContent":["import JSBI from 'jsbi'\n\n// exports for external consumption\nexport type BigintIsh = JSBI | bigint | string\n\nexport enum ChainId {\n  AVALANCHE = 43114\n}\n\nexport enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n\nexport const FACTORY_ADDRESS = '0x2b85c99d6f40f584c8742aafd93844309df396cb' //TODO Need to change this. This address should be same for both testnet and mainnet\n\nexport const INIT_CODE_HASH = '0xdc881fbbbdf45595337cc751b266384ded4942f7326bf7ebbc8bde142f820018'\n\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)\n\n// exports for internal consumption\nexport const ZERO = JSBI.BigInt(0)\nexport const ONE = JSBI.BigInt(1)\nexport const TWO = JSBI.BigInt(2)\nexport const THREE = JSBI.BigInt(3)\nexport const FIVE = JSBI.BigInt(5)\nexport const TEN = JSBI.BigInt(10)\nexport const _100 = JSBI.BigInt(100)\nexport const _997 = JSBI.BigInt(997)\nexport const _1000 = JSBI.BigInt(1000)\n\nexport enum SolidityType {\n  uint8 = 'uint8',\n  uint256 = 'uint256'\n}\n\nexport const SOLIDITY_TYPE_MAXIMA = {\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n}\n","// see https://stackoverflow.com/a/41102306\nconst CAN_SET_PROTOTYPE = 'setPrototypeOf' in Object\n\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\nexport class InsufficientReservesError extends Error {\n  public readonly isInsufficientReservesError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\nexport class InsufficientInputAmountError extends Error {\n  public readonly isInsufficientInputAmountError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport JSBI from 'jsbi'\nimport { getAddress } from '@ethersproject/address'\n\nimport { BigintIsh, ZERO, ONE, TWO, THREE, SolidityType, SOLIDITY_TYPE_MAXIMA } from './constants'\n\nexport function validateSolidityTypeInstance(value: JSBI, solidityType: SolidityType): void {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), `${value} is not a ${solidityType}.`)\n  invariant(JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]), `${value} is not a ${solidityType}.`)\n}\n\n// warns if addresses are not checksummed\nexport function validateAndParseAddress(address: string): string {\n  try {\n    const checksummedAddress = getAddress(address)\n    warning(address === checksummedAddress, `${address} is not checksummed.`)\n    return checksummedAddress\n  } catch (error) {\n    invariant(false, `${address} is not a valid address.`)\n  }\n}\n\nexport function parseBigintIsh(bigintIsh: BigintIsh): JSBI {\n  return bigintIsh instanceof JSBI\n    ? bigintIsh\n    : typeof bigintIsh === 'bigint'\n    ? JSBI.BigInt(bigintIsh.toString())\n    : JSBI.BigInt(bigintIsh)\n}\n\n// mock the on-chain sqrt function\nexport function sqrt(y: JSBI): JSBI {\n  validateSolidityTypeInstance(y, SolidityType.uint256)\n  let z: JSBI = ZERO\n  let x: JSBI\n  if (JSBI.greaterThan(y, THREE)) {\n    z = y\n    x = JSBI.add(JSBI.divide(y, TWO), ONE)\n    while (JSBI.lessThan(x, z)) {\n      z = x\n      x = JSBI.divide(JSBI.add(JSBI.divide(y, x), x), TWO)\n    }\n  } else if (JSBI.notEqual(y, ZERO)) {\n    z = ONE\n  }\n  return z\n}\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n","import JSBI from 'jsbi'\n\nimport { SolidityType } from '../constants'\nimport { validateSolidityTypeInstance } from '../utils'\n\n/**\n * A currency is any fungible financial instrument on Ethereum, including Ether and all ERC20 tokens.\n *\n * The only instance of the base class `Currency` is Ether.\n */\nexport class Currency {\n  public readonly decimals: number\n  public readonly symbol?: string\n  public readonly name?: string\n\n  /**\n   * The only instance of the base class `Currency`.\n   */\n  public static readonly ETHER: Currency = new Currency(18, 'Avax', 'Avax')\n\n  /**\n   * Constructs an instance of the base class `Currency`. The only instance of the base class `Currency` is `Currency.ETHER`.\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(decimals: number, symbol?: string, name?: string) {\n    validateSolidityTypeInstance(JSBI.BigInt(decimals), SolidityType.uint8)\n\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n}\n\nconst ETHER = Currency.ETHER\nexport { ETHER }\n","import invariant from 'tiny-invariant'\nimport { ChainId } from '../constants'\nimport { validateAndParseAddress } from '../utils'\nimport { Currency } from './currency'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends Currency {\n  public readonly chainId: ChainId\n  public readonly address: string\n\n  public constructor(chainId: ChainId, address: string, decimals: number, symbol?: string, name?: string) {\n    super(decimals, symbol, name)\n    this.chainId = chainId\n    this.address = validateAndParseAddress(address)\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Token): boolean {\n    // short circuit on reference equality\n    if (this === other) {\n      return true\n    }\n    return this.chainId === other.chainId && this.address === other.address\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address !== other.address, 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB)\n  } else if (currencyA instanceof Token) {\n    return false\n  } else if (currencyB instanceof Token) {\n    return false\n  } else {\n    return currencyA === currencyB\n  }\n}\n\nexport const WETH = {\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7', 18, 'WAVAX', 'Wrapped Avax'),\n}\n","import invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport _Decimal from 'decimal.js-light'\nimport _Big, { RoundingMode } from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding } from '../../constants'\nimport { ONE } from '../../constants'\nimport { parseBigintIsh } from '../../utils'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = ONE) {\n    this.numerator = parseBigintIsh(numerator)\n    this.denominator = parseBigintIsh(denominator)\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n}\n","import { currencyEquals } from '../token'\nimport { Currency, ETHER } from '../currency'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport _Big from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding, TEN, SolidityType } from '../../constants'\nimport { parseBigintIsh, validateSolidityTypeInstance } from '../../utils'\nimport { Fraction } from './fraction'\n\nconst Big = toFormat(_Big)\n\nexport class CurrencyAmount extends Fraction {\n  public readonly currency: Currency\n\n  /**\n   * Helper that calls the constructor with the ETHER currency\n   * @param amount ether amount in wei\n   */\n  public static ether(amount: BigintIsh): CurrencyAmount {\n    return new CurrencyAmount(ETHER, amount)\n  }\n\n  // amount _must_ be raw, i.e. in the native representation\n  protected constructor(currency: Currency, amount: BigintIsh) {\n    const parsedAmount = parseBigintIsh(amount)\n    validateSolidityTypeInstance(parsedAmount, SolidityType.uint256)\n\n    super(parsedAmount, JSBI.exponentiate(TEN, JSBI.BigInt(currency.decimals)))\n    this.currency = currency\n  }\n\n  public get raw(): JSBI {\n    return this.numerator\n  }\n\n  public add(other: CurrencyAmount): CurrencyAmount {\n    invariant(currencyEquals(this.currency, other.currency), 'TOKEN')\n    return new CurrencyAmount(this.currency, JSBI.add(this.raw, other.raw))\n  }\n\n  public subtract(other: CurrencyAmount): CurrencyAmount {\n    invariant(currencyEquals(this.currency, other.currency), 'TOKEN')\n    return new CurrencyAmount(this.currency, JSBI.subtract(this.raw, other.raw))\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(format)\n  }\n}\n","import { CurrencyAmount } from './currencyAmount'\nimport { Token } from '../token'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\n\nimport { BigintIsh } from '../../constants'\n\nexport class TokenAmount extends CurrencyAmount {\n  public readonly token: Token\n\n  // amount _must_ be raw, i.e. in the native representation\n  public constructor(token: Token, amount: BigintIsh) {\n    super(token, amount)\n    this.token = token\n  }\n\n  public add(other: TokenAmount): TokenAmount {\n    invariant(this.token.equals(other.token), 'TOKEN')\n    return new TokenAmount(this.token, JSBI.add(this.raw, other.raw))\n  }\n\n  public subtract(other: TokenAmount): TokenAmount {\n    invariant(this.token.equals(other.token), 'TOKEN')\n    return new TokenAmount(this.token, JSBI.subtract(this.raw, other.raw))\n  }\n}\n","import { Token } from '../token'\nimport { TokenAmount } from './tokenAmount'\nimport { currencyEquals } from '../token'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\n\nimport { BigintIsh, Rounding, TEN } from '../../constants'\nimport { Currency } from '../currency'\nimport { Route } from '../route'\nimport { Fraction } from './fraction'\nimport { CurrencyAmount } from './currencyAmount'\n\nexport class Price extends Fraction {\n  public readonly baseCurrency: Currency // input i.e. denominator\n  public readonly quoteCurrency: Currency // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  public static fromRoute(route: Route): Price {\n    const prices: Price[] = []\n    for (const [i, pair] of route.pairs.entries()) {\n      prices.push(\n        route.path[i].equals(pair.token0)\n          ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.raw, pair.reserve1.raw)\n          : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.raw, pair.reserve0.raw)\n      )\n    }\n    return prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0])\n  }\n\n  // denominator and numerator _must_ be raw, i.e. in the native representation\n  public constructor(baseCurrency: Currency, quoteCurrency: Currency, denominator: BigintIsh, numerator: BigintIsh) {\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(TEN, JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(TEN, JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  public get raw(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n\n  public get adjusted(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public invert(): Price {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  public multiply(other: Price): Price {\n    invariant(currencyEquals(this.quoteCurrency, other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  // performs floor division on overflow\n  public quote(currencyAmount: CurrencyAmount): CurrencyAmount {\n    invariant(currencyEquals(currencyAmount.currency, this.baseCurrency), 'TOKEN')\n    if (this.quoteCurrency instanceof Token) {\n      return new TokenAmount(this.quoteCurrency, super.multiply(currencyAmount.raw).quotient)\n    }\n    return CurrencyAmount.ether(super.multiply(currencyAmount.raw).quotient)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import { Price } from './fractions/price'\nimport { TokenAmount } from './fractions/tokenAmount'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport { pack, keccak256 } from '@ethersproject/solidity'\nimport { getCreate2Address } from '@ethersproject/address'\n\nimport {\n  BigintIsh,\n  FACTORY_ADDRESS,\n  INIT_CODE_HASH,\n  MINIMUM_LIQUIDITY,\n  ZERO,\n  ONE,\n  FIVE,\n  _997,\n  _1000,\n  ChainId\n} from '../constants'\nimport { sqrt, parseBigintIsh } from '../utils'\nimport { InsufficientReservesError, InsufficientInputAmountError } from '../errors'\nimport { Token } from './token'\n\nlet PAIR_ADDRESS_CACHE: { [token0Address: string]: { [token1Address: string]: string } } = {}\n\nexport class Pair {\n  public readonly liquidityToken: Token\n  private readonly tokenAmounts: [TokenAmount, TokenAmount]\n\n  public static getAddress(tokenA: Token, tokenB: Token): string {\n    const tokens = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n\n    if (PAIR_ADDRESS_CACHE?.[tokens[0].address]?.[tokens[1].address] === undefined) {\n      PAIR_ADDRESS_CACHE = {\n        ...PAIR_ADDRESS_CACHE,\n        [tokens[0].address]: {\n          ...PAIR_ADDRESS_CACHE?.[tokens[0].address],\n          [tokens[1].address]: getCreate2Address(\n            FACTORY_ADDRESS,\n            keccak256(['bytes'], [pack(['address', 'address'], [tokens[0].address, tokens[1].address])]),\n            INIT_CODE_HASH\n          )\n        }\n      }\n    }\n\n    return PAIR_ADDRESS_CACHE[tokens[0].address][tokens[1].address]\n  }\n\n  public constructor(tokenAmountA: TokenAmount, tokenAmountB: TokenAmount) {\n    const tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    this.liquidityToken = new Token(\n      tokenAmounts[0].token.chainId,\n      Pair.getAddress(tokenAmounts[0].token, tokenAmounts[1].token),\n      18,\n      'SLR-V2',\n      'Solar V2'\n    )\n    this.tokenAmounts = tokenAmounts as [TokenAmount, TokenAmount]\n  }\n\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  public involvesToken(token: Token): boolean {\n    return token.equals(this.token0) || token.equals(this.token1)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  public get token0Price(): Price {\n    return new Price(this.token0, this.token1, this.tokenAmounts[0].raw, this.tokenAmounts[1].raw)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n   */\n  public get token1Price(): Price {\n    return new Price(this.token1, this.token0, this.tokenAmounts[1].raw, this.tokenAmounts[0].raw)\n  }\n\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n  public priceOf(token: Token): Price {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\n  }\n\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  public get chainId(): ChainId {\n    return this.token0.chainId\n  }\n\n  public get token0(): Token {\n    return this.tokenAmounts[0].token\n  }\n\n  public get token1(): Token {\n    return this.tokenAmounts[1].token\n  }\n\n  public get reserve0(): TokenAmount {\n    return this.tokenAmounts[0]\n  }\n\n  public get reserve1(): TokenAmount {\n    return this.tokenAmounts[1]\n  }\n\n  public reserveOf(token: Token): TokenAmount {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\n  }\n\n  public getOutputAmount(inputAmount: TokenAmount): [TokenAmount, Pair] {\n    invariant(this.involvesToken(inputAmount.token), 'TOKEN')\n    if (JSBI.equal(this.reserve0.raw, ZERO) || JSBI.equal(this.reserve1.raw, ZERO)) {\n      throw new InsufficientReservesError()\n    }\n    const inputReserve = this.reserveOf(inputAmount.token)\n    const outputReserve = this.reserveOf(inputAmount.token.equals(this.token0) ? this.token1 : this.token0)\n    const inputAmountWithFee = JSBI.multiply(inputAmount.raw, _997)\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.raw)\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.raw, _1000), inputAmountWithFee)\n    const outputAmount = new TokenAmount(\n      inputAmount.token.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.divide(numerator, denominator)\n    )\n    if (JSBI.equal(outputAmount.raw, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getInputAmount(outputAmount: TokenAmount): [TokenAmount, Pair] {\n    invariant(this.involvesToken(outputAmount.token), 'TOKEN')\n    if (\n      JSBI.equal(this.reserve0.raw, ZERO) ||\n      JSBI.equal(this.reserve1.raw, ZERO) ||\n      JSBI.greaterThanOrEqual(outputAmount.raw, this.reserveOf(outputAmount.token).raw)\n    ) {\n      throw new InsufficientReservesError()\n    }\n\n    const outputReserve = this.reserveOf(outputAmount.token)\n    const inputReserve = this.reserveOf(outputAmount.token.equals(this.token0) ? this.token1 : this.token0)\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.raw, outputAmount.raw), _1000)\n    const denominator = JSBI.multiply(JSBI.subtract(outputReserve.raw, outputAmount.raw), _997)\n    const inputAmount = new TokenAmount(\n      outputAmount.token.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\n    )\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getLiquidityMinted(\n    totalSupply: TokenAmount,\n    tokenAmountA: TokenAmount,\n    tokenAmountB: TokenAmount\n  ): TokenAmount {\n    invariant(totalSupply.token.equals(this.liquidityToken), 'LIQUIDITY')\n    const tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    invariant(tokenAmounts[0].token.equals(this.token0) && tokenAmounts[1].token.equals(this.token1), 'TOKEN')\n\n    let liquidity: JSBI\n    if (JSBI.equal(totalSupply.raw, ZERO)) {\n      liquidity = JSBI.subtract(sqrt(JSBI.multiply(tokenAmounts[0].raw, tokenAmounts[1].raw)), MINIMUM_LIQUIDITY)\n    } else {\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].raw, totalSupply.raw), this.reserve0.raw)\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].raw, totalSupply.raw), this.reserve1.raw)\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\n    }\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return new TokenAmount(this.liquidityToken, liquidity)\n  }\n\n  public getLiquidityValue(\n    token: Token,\n    totalSupply: TokenAmount,\n    liquidity: TokenAmount,\n    feeOn: boolean = false,\n    kLast?: BigintIsh\n  ): TokenAmount {\n    invariant(this.involvesToken(token), 'TOKEN')\n    invariant(totalSupply.token.equals(this.liquidityToken), 'TOTAL_SUPPLY')\n    invariant(liquidity.token.equals(this.liquidityToken), 'LIQUIDITY')\n    invariant(JSBI.lessThanOrEqual(liquidity.raw, totalSupply.raw), 'LIQUIDITY')\n\n    let totalSupplyAdjusted: TokenAmount\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply\n    } else {\n      invariant(!!kLast, 'K_LAST')\n      const kLastParsed = parseBigintIsh(kLast)\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        const rootK = sqrt(JSBI.multiply(this.reserve0.raw, this.reserve1.raw))\n        const rootKLast = sqrt(kLastParsed)\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          const numerator = JSBI.multiply(totalSupply.raw, JSBI.subtract(rootK, rootKLast))\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\n          const feeLiquidity = JSBI.divide(numerator, denominator)\n          totalSupplyAdjusted = totalSupply.add(new TokenAmount(this.liquidityToken, feeLiquidity))\n        } else {\n          totalSupplyAdjusted = totalSupply\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply\n      }\n    }\n\n    return new TokenAmount(\n      token,\n      JSBI.divide(JSBI.multiply(liquidity.raw, this.reserveOf(token).raw), totalSupplyAdjusted.raw)\n    )\n  }\n}\n","import { ChainId } from '../constants'\nimport invariant from 'tiny-invariant'\n\nimport { Currency, ETHER } from './currency'\nimport { Token, WETH } from './token'\nimport { Pair } from './pair'\nimport { Price } from './fractions/price'\n\nexport class Route {\n  public readonly pairs: Pair[]\n  public readonly path: Token[]\n  public readonly input: Currency\n  public readonly output: Currency\n  public readonly midPrice: Price\n\n  public constructor(pairs: Pair[], input: Currency, output?: Currency) {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(\n      pairs.every(pair => pair.chainId === pairs[0].chainId),\n      'CHAIN_IDS'\n    )\n    invariant(\n      (input instanceof Token && pairs[0].involvesToken(input)) ||\n        (input === ETHER && pairs[0].involvesToken(WETH[pairs[0].chainId])),\n      'INPUT'\n    )\n    invariant(\n      typeof output === 'undefined' ||\n        (output instanceof Token && pairs[pairs.length - 1].involvesToken(output)) ||\n        (output === ETHER && pairs[pairs.length - 1].involvesToken(WETH[pairs[0].chainId])),\n      'OUTPUT'\n    )\n\n    const path: Token[] = [input instanceof Token ? input : WETH[pairs[0].chainId]]\n    for (const [i, pair] of pairs.entries()) {\n      const currentInput = path[i]\n      invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH')\n      const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0\n      path.push(output)\n    }\n\n    this.pairs = pairs\n    this.path = path\n    this.midPrice = Price.fromRoute(this)\n    this.input = input\n    this.output = output ?? path[path.length - 1]\n  }\n\n  public get chainId(): ChainId {\n    return this.pairs[0].chainId\n  }\n}\n","import { Rounding, _100 } from '../../constants'\nimport { Fraction } from './fraction'\n\nconst _100_PERCENT = new Fraction(_100)\n\nexport class Percent extends Fraction {\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return this.multiply(_100_PERCENT).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return this.multiply(_100_PERCENT).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import invariant from 'tiny-invariant'\n\nimport { ChainId, ONE, TradeType, ZERO } from '../constants'\nimport { sortedInsert } from '../utils'\nimport { Currency, ETHER } from './currency'\nimport { CurrencyAmount } from './fractions/currencyAmount'\nimport { Fraction } from './fractions/fraction'\nimport { Percent } from './fractions/percent'\nimport { Price } from './fractions/price'\nimport { TokenAmount } from './fractions/tokenAmount'\nimport { Pair } from './pair'\nimport { Route } from './route'\nimport { currencyEquals, Token, WETH } from './token'\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nfunction computePriceImpact(midPrice: Price, inputAmount: CurrencyAmount, outputAmount: CurrencyAmount): Percent {\n  const exactQuote = midPrice.raw.multiply(inputAmount.raw)\n  // calculate slippage := (exactQuote - outputAmount) / exactQuote\n  const slippage = exactQuote.subtract(outputAmount.raw).divide(exactQuote)\n  return new Percent(slippage.numerator, slippage.denominator)\n}\n\n// minimal interface so the input output comparator may be shared across types\ninterface InputOutput {\n  readonly inputAmount: CurrencyAmount\n  readonly outputAmount: CurrencyAmount\n}\n\n// comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\nexport function inputOutputComparator(a: InputOutput, b: InputOutput): number {\n  // must have same input and output token for comparison\n  invariant(currencyEquals(a.inputAmount.currency, b.inputAmount.currency), 'INPUT_CURRENCY')\n  invariant(currencyEquals(a.outputAmount.currency, b.outputAmount.currency), 'OUTPUT_CURRENCY')\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0\n    }\n    // trade A requires less input than trade B, so A should come first\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1\n    } else {\n      return 1\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1\n    } else {\n      return -1\n    }\n  }\n}\n\n// extension of the input output comparator that also considers other dimensions of the trade in ranking them\nexport function tradeComparator(a: Trade, b: Trade) {\n  const ioComp = inputOutputComparator(a, b)\n  if (ioComp !== 0) {\n    return ioComp\n  }\n\n  // consider lowest slippage next, since these are less likely to fail\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1\n  }\n\n  // finally consider the number of hops since each hop costs gas\n  return a.route.path.length - b.route.path.length\n}\n\nexport interface BestTradeOptions {\n  // how many results to return\n  maxNumResults?: number\n  // the maximum number of hops a trade should contain\n  maxHops?: number\n}\n\n/**\n * Given a currency amount and a chain ID, returns the equivalent representation as the token amount.\n * In other words, if the currency is ETHER, returns the WETH token amount for the given chain. Otherwise, returns\n * the input currency amount.\n */\nfunction wrappedAmount(currencyAmount: CurrencyAmount, chainId: ChainId): TokenAmount {\n  if (currencyAmount instanceof TokenAmount) return currencyAmount\n  if (currencyAmount.currency === ETHER) return new TokenAmount(WETH[chainId], currencyAmount.raw)\n  invariant(false, 'CURRENCY')\n}\n\nfunction wrappedCurrency(currency: Currency, chainId: ChainId): Token {\n  if (currency instanceof Token) return currency\n  if (currency === ETHER) return WETH[chainId]\n  invariant(false, 'CURRENCY')\n}\n\n/**\n * Represents a trade executed against a list of pairs.\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\n */\nexport class Trade {\n  /**\n   * The route of the trade, i.e. which pairs the trade goes through.\n   */\n  public readonly route: Route\n  /**\n   * The type of the trade, either exact in or exact out.\n   */\n  public readonly tradeType: TradeType\n  /**\n   * The input amount for the trade assuming no slippage.\n   */\n  public readonly inputAmount: CurrencyAmount\n  /**\n   * The output amount for the trade assuming no slippage.\n   */\n  public readonly outputAmount: CurrencyAmount\n  /**\n   * The price expressed in terms of output amount/input amount.\n   */\n  public readonly executionPrice: Price\n  /**\n   * The mid price after the trade executes assuming no slippage.\n   */\n  public readonly nextMidPrice: Price\n  /**\n   * The percent difference between the mid price before the trade and the trade execution price.\n   */\n  public readonly priceImpact: Percent\n\n  /**\n   * Constructs an exact in trade with the given amount in and route\n   * @param route route of the exact in trade\n   * @param amountIn the amount being passed in\n   */\n  public static exactIn(route: Route, amountIn: CurrencyAmount): Trade {\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT)\n  }\n\n  /**\n   * Constructs an exact out trade with the given amount out and route\n   * @param route route of the exact out trade\n   * @param amountOut the amount returned by the trade\n   */\n  public static exactOut(route: Route, amountOut: CurrencyAmount): Trade {\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT)\n  }\n\n  public constructor(route: Route, amount: CurrencyAmount, tradeType: TradeType) {\n    const amounts: TokenAmount[] = new Array(route.path.length)\n    const nextPairs: Pair[] = new Array(route.pairs.length)\n    if (tradeType === TradeType.EXACT_INPUT) {\n      invariant(currencyEquals(amount.currency, route.input), 'INPUT')\n      amounts[0] = wrappedAmount(amount, route.chainId)\n      for (let i = 0; i < route.path.length - 1; i++) {\n        const pair = route.pairs[i]\n        const [outputAmount, nextPair] = pair.getOutputAmount(amounts[i])\n        amounts[i + 1] = outputAmount\n        nextPairs[i] = nextPair\n      }\n    } else {\n      invariant(currencyEquals(amount.currency, route.output), 'OUTPUT')\n      amounts[amounts.length - 1] = wrappedAmount(amount, route.chainId)\n      for (let i = route.path.length - 1; i > 0; i--) {\n        const pair = route.pairs[i - 1]\n        const [inputAmount, nextPair] = pair.getInputAmount(amounts[i])\n        amounts[i - 1] = inputAmount\n        nextPairs[i - 1] = nextPair\n      }\n    }\n\n    this.route = route\n    this.tradeType = tradeType\n    this.inputAmount =\n      tradeType === TradeType.EXACT_INPUT\n        ? amount\n        : route.input === ETHER\n        ? CurrencyAmount.ether(amounts[0].raw)\n        : amounts[0]\n    this.outputAmount =\n      tradeType === TradeType.EXACT_OUTPUT\n        ? amount\n        : route.output === ETHER\n        ? CurrencyAmount.ether(amounts[amounts.length - 1].raw)\n        : amounts[amounts.length - 1]\n    this.executionPrice = new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.inputAmount.raw,\n      this.outputAmount.raw\n    )\n    this.nextMidPrice = Price.fromRoute(new Route(nextPairs, route.input))\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount)\n  }\n\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public minimumAmountOut(slippageTolerance: Percent): CurrencyAmount {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount\n    } else {\n      const slippageAdjustedAmountOut = new Fraction(ONE)\n        .add(slippageTolerance)\n        .invert()\n        .multiply(this.outputAmount.raw).quotient\n      return this.outputAmount instanceof TokenAmount\n        ? new TokenAmount(this.outputAmount.token, slippageAdjustedAmountOut)\n        : CurrencyAmount.ether(slippageAdjustedAmountOut)\n    }\n  }\n\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public maximumAmountIn(slippageTolerance: Percent): CurrencyAmount {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount\n    } else {\n      const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(this.inputAmount.raw).quotient\n      return this.inputAmount instanceof TokenAmount\n        ? new TokenAmount(this.inputAmount.token, slippageAdjustedAmountIn)\n        : CurrencyAmount.ether(slippageAdjustedAmountIn)\n    }\n  }\n\n  /**\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n   * amount to an output token, making at most `maxHops` hops.\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountIn used in recursion; the original value of the currencyAmountIn parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactIn(\n    pairs: Pair[],\n    currencyAmountIn: CurrencyAmount,\n    currencyOut: Currency,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    originalAmountIn: CurrencyAmount = currencyAmountIn,\n    bestTrades: Trade[] = []\n  ): Trade[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(originalAmountIn === currencyAmountIn || currentPairs.length > 0, 'INVALID_RECURSION')\n    const chainId: ChainId | undefined =\n      currencyAmountIn instanceof TokenAmount\n        ? currencyAmountIn.token.chainId\n        : currencyOut instanceof Token\n        ? currencyOut.chainId\n        : undefined\n    invariant(chainId !== undefined, 'CHAIN_ID')\n\n    const amountIn = wrappedAmount(currencyAmountIn, chainId)\n    const tokenOut = wrappedCurrency(currencyOut, chainId)\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountIn.token) && !pair.token1.equals(amountIn.token)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountOut: TokenAmount\n      try {\n        ;[amountOut] = pair.getOutputAmount(amountIn)\n      } catch (error) {\n        // input too low\n        if (error instanceof Error) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the output token, so this is the final trade of one of the paths\n      if (amountOut.token.equals(tokenOut)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([...currentPairs, pair], originalAmountIn.currency, currencyOut),\n            originalAmountIn,\n            TradeType.EXACT_INPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactIn(\n          pairsExcludingThisPair,\n          amountOut,\n          currencyOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [...currentPairs, pair],\n          originalAmountIn,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n\n  /**\n   * similar to the above method but instead targets a fixed output amount\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n   * to an output token amount, making at most `maxHops` hops\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyIn the currency to spend\n   * @param currencyAmountOut the exact amount of currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountOut used in recursion; the original value of the currencyAmountOut parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactOut(\n    pairs: Pair[],\n    currencyIn: Currency,\n    currencyAmountOut: CurrencyAmount,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    originalAmountOut: CurrencyAmount = currencyAmountOut,\n    bestTrades: Trade[] = []\n  ): Trade[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(originalAmountOut === currencyAmountOut || currentPairs.length > 0, 'INVALID_RECURSION')\n    const chainId: ChainId | undefined =\n      currencyAmountOut instanceof TokenAmount\n        ? currencyAmountOut.token.chainId\n        : currencyIn instanceof Token\n        ? currencyIn.chainId\n        : undefined\n    invariant(chainId !== undefined, 'CHAIN_ID')\n\n    const amountOut = wrappedAmount(currencyAmountOut, chainId)\n    const tokenIn = wrappedCurrency(currencyIn, chainId)\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountOut.token) && !pair.token1.equals(amountOut.token)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountIn: TokenAmount\n      try {\n        ;[amountIn] = pair.getInputAmount(amountOut)\n      } catch (error) {\n        // not enough liquidity in this pair\n        if (error instanceof Error) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the input token, so this is the first trade of one of the paths\n      if (amountIn.token.equals(tokenIn)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([pair, ...currentPairs], currencyIn, originalAmountOut.currency),\n            originalAmountOut,\n            TradeType.EXACT_OUTPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactOut(\n          pairsExcludingThisPair,\n          currencyIn,\n          amountIn,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [pair, ...currentPairs],\n          originalAmountOut,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n}\n","import { TradeType } from './constants'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from './utils'\nimport { CurrencyAmount, ETHER, Percent, Trade } from './entities'\n\n/**\n * Options for producing the arguments to send call to the router.\n */\nexport interface TradeOptions {\n  /**\n   * How much the execution price is allowed to move unfavorably from the trade execution price.\n   */\n  allowedSlippage: Percent\n  /**\n   * How long the swap is valid until it expires, in seconds.\n   * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\n   * are generated.\n   */\n  ttl: number\n  /**\n   * The account that should receive the output of the swap.\n   */\n  recipient: string\n\n  /**\n   * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\n   */\n  feeOnTransfer?: boolean\n}\n\n/**\n * The parameters to use in the call to the Moonwalkerswap V2 Router to execute a trade.\n */\nexport interface SwapParameters {\n  /**\n   * The method to call on the Moonwalkerswap V2 Router.\n   */\n  methodName: string\n  /**\n   * The arguments to pass to the method, all hex encoded.\n   */\n  args: (string | string[])[]\n  /**\n   * The amount of wei to send in hex.\n   */\n  value: string\n}\n\nfunction toHex(currencyAmount: CurrencyAmount) {\n  return `0x${currencyAmount.raw.toString(16)}`\n}\n\nconst ZERO_HEX = '0x0'\n\n/**\n * Represents the Moonwalkerswap V2 Router, and has static methods for helping execute trades.\n */\nexport abstract class Router {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n  /**\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n   * @param trade to produce call parameters for\n   * @param options options for the call parameters\n   */\n  public static swapCallParameters(trade: Trade, options: TradeOptions): SwapParameters {\n    const etherIn = trade.inputAmount.currency === ETHER\n    const etherOut = trade.outputAmount.currency === ETHER\n    // the router does not support both ether in and out\n    invariant(!(etherIn && etherOut), 'ETHER_IN_OUT')\n    invariant(options.ttl > 0, 'TTL')\n\n    const to: string = validateAndParseAddress(options.recipient)\n    const amountIn: string = toHex(trade.maximumAmountIn(options.allowedSlippage))\n    const amountOut: string = toHex(trade.minimumAmountOut(options.allowedSlippage))\n    const path: string[] = trade.route.path.map(token => token.address)\n    const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16)}`\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer)\n\n    let methodName: string\n    let args: (string | string[])[]\n    let value: string\n    switch (trade.tradeType) {\n      case TradeType.EXACT_INPUT:\n        if (etherIn) {\n          methodName = useFeeOnTransfer ? 'swapExactETHForTokensSupportingFeeOnTransferTokens' : 'swapExactETHForTokens'\n          // (uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = useFeeOnTransfer ? 'swapExactTokensForETHSupportingFeeOnTransferTokens' : 'swapExactTokensForETH'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = useFeeOnTransfer\n            ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens'\n            : 'swapExactTokensForTokens'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n      case TradeType.EXACT_OUTPUT:\n        invariant(!useFeeOnTransfer, 'EXACT_OUT_FOT')\n        if (etherIn) {\n          methodName = 'swapETHForExactTokens'\n          // (uint amountOut, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = 'swapTokensForExactETH'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = 'swapTokensForExactTokens'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n    }\n    return {\n      methodName,\n      args,\n      value\n    }\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getNetwork } from '@ethersproject/networks'\nimport { getDefaultProvider } from '@ethersproject/providers'\nimport { TokenAmount } from './entities/fractions/tokenAmount'\nimport { Pair } from './entities/pair'\nimport IMoonwalkerPair from 'moonwalkerswap-v2-core/build/contracts/IMoonwalkerPair.json'\nimport invariant from 'tiny-invariant'\nimport ERC20 from './abis/ERC20.json'\nimport { ChainId } from './constants'\nimport { Token } from './entities/token'\n\nlet TOKEN_DECIMALS_CACHE: { [chainId: number]: { [address: string]: number } } = {\n  [ChainId.AVALANCHE]: {\n    '0x5ce9680bddc91d955a51b959f5cabaf466b0be5a': 18\n  }\n}\n\n/**\n * Contains methods for constructing instances of pairs and tokens from on-chain data.\n */\nexport abstract class Fetcher {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n\n  /**\n   * Fetch information for a given token on the given chain, using the given ethers provider.\n   * @param chainId chain of the token\n   * @param address address of the token on the chain\n   * @param provider provider used to fetch the token\n   * @param symbol optional symbol of the token\n   * @param name optional name of the token\n   */\n  public static async fetchTokenData(\n    chainId: ChainId,\n    address: string,\n    provider = getDefaultProvider(getNetwork(chainId)),\n    symbol?: string,\n    name?: string\n  ): Promise<Token> {\n    const parsedDecimals =\n      typeof TOKEN_DECIMALS_CACHE?.[chainId]?.[address] === 'number'\n        ? TOKEN_DECIMALS_CACHE[chainId][address]\n        : await new Contract(address, ERC20, provider).decimals().then((decimals: number): number => {\n            TOKEN_DECIMALS_CACHE = {\n              ...TOKEN_DECIMALS_CACHE,\n              [chainId]: {\n                ...TOKEN_DECIMALS_CACHE?.[chainId],\n                [address]: decimals\n              }\n            }\n            return decimals\n          })\n    return new Token(chainId, address, parsedDecimals, symbol, name)\n  }\n\n  /**\n   * Fetches information about a pair and constructs a pair from the given two tokens.\n   * @param tokenA first token\n   * @param tokenB second token\n   * @param provider the provider to use to fetch the data\n   */\n  public static async fetchPairData(\n    tokenA: Token,\n    tokenB: Token,\n    provider = getDefaultProvider(getNetwork(tokenA.chainId))\n  ): Promise<Pair> {\n    invariant(tokenA.chainId === tokenB.chainId, 'CHAIN_ID')\n    const address = Pair.getAddress(tokenA, tokenB)\n    const [reserves0, reserves1] = await new Contract(address, IMoonwalkerPair.abi, provider).getReserves()\n    const balances = tokenA.sortsBefore(tokenB) ? [reserves0, reserves1] : [reserves1, reserves0]\n    return new Pair(new TokenAmount(tokenA, balances[0]), new TokenAmount(tokenB, balances[1]))\n  }\n}\n"]},"metadata":{},"sourceType":"script"}